@model CornerkickWebMvc.Models.AdminModel

@{
  ViewBag.Title = "Settings";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
  var sDir = "";
  $(document).ready(function () {
    setFileExplorer();

    $("#bnSetWeeks1").click(function () {
      setCalInterval(1);
    });

    $("#bnSetWeeks2").click(function () {
      setCalInterval(2);
    });
  });

  function setCalInterval(iWeeks) {
    // Capital letters = Real-time
    //              MIN * S  * H   /   weeks * qu  * h  * d
    var fInterval = (60 * 60 * 24) / (iWeeks * 4.0 * 24 * 7);
    document.getElementById('fCalendarInterval').value = fInterval;
  }

  function changeDir() {
    sDir = document.getElementById('itCd').value;
    setFileExplorer();
  }

  function setFileExplorer() {
    $.ajax({
      url: '/Admin/getFilesInDirectory',
      type: "GET",
      dataType: "JSON",
      data: { sDir: sDir },
      success: function (sContent) {
        document.getElementById('itCurDir').value = sDir;

        $("#divFileExplorer").html(setFileExplorerTable(sContent)).show();
      }
    });
  }


  function setFileExplorerTable(sContent) {
    var sBox = '';
    sBox += '<table id="tableFileExplorer" style="width: 100%; background-color: black; color: white">';

    sNsplit = sContent.split('\n');
    for (var i = 0; i < sNsplit.length; i++) {
      sN = sNsplit[i];

      sN = sN.replace("<", "&lt;");
      sN = sN.replace(">", "&gt;");

      sBox += '<tr>';
      sBox += '<td>' + sN + '</td>';
      sBox += '</tr>';
    }

    sBox += '</table>';

    return sBox;
  }

</script>

<h2>Settings</h2>
@{
  string sDtNow = DateTime.Now.ToString();
  bool bCk = true;
  bool bTimer = false;
  string sInterval = "";
  string sHour = "";
  if (Model != null) {
    bCk = Model.bCk;
    bTimer = Model.bTimer;
    sInterval = Model.fCalendarInterval.ToString() + " s";
    sHour = Model.sStartHour;
  }
}

<div style="position: relative; width: 50%; min-width: 300px; margin-bottom: 10px">
  @using (Html.BeginForm("StartCalendar", "Admin", FormMethod.Post)) {
    @Html.TextBoxFor(m => m.fCalendarInterval, new { autocomplete = "off", autofocus = "autofocus", style = "width: 33%" })
    @Html.TextBoxFor(m => m.sStartHour, new { autocomplete = "off", style = "width: 33%" })
    @Html.TextBoxFor(m => m.iGameSpeed, new { autocomplete = "off", style = "width: 33%" })

    <p></p>
    if (bTimer) {
      <button type="submit" class="btn btn-default" style="position: relative; width: 200px">Stop</button>
    } else {
      <button type="submit" class="btn btn-default" style="position: relative; width: 200px">Start</button>
    }
  }
</div>

<button type="submit" id="bnSetWeeks1" class="btn btn-default" style="position: relative; width: 200px">1 Day -> 1 Week</button>
<button type="submit" id="bnSetWeeks2" class="btn btn-default" style="position: relative; width: 200px">1 Day -> 2 Weeks</button>

<p></p>
<text>System time: @sDtNow<br></text>
<text>running: @bCk.ToString()<br></text>
<text>timer: @bTimer.ToString()<br></text>
<text>interval: @sInterval<br></text>
<text>hour: @sHour<br></text>
<text>No. of Teams: @Model.nClubs<br></text>
<text>No. of User: @Model.nUser<br></text>
<text>No. of Player: @Model.nPlayer<br></text>

@using (Html.BeginForm("RestartCk", "Admin", FormMethod.Post)) {
  <button type="submit" class="btn btn-default">Restart Cornerkick</button>
}

@using (Html.BeginForm("DeleteLog", "Admin", FormMethod.Post)) {
  if (Model.bLogExist) {
    <button type="submit" class="btn btn-default">delete Log</button>
  } else {
    <button type="submit" class="btn btn-default" disabled>delete Log</button>
  }
}

@using (Html.BeginForm("SaveAutosave", "Admin", FormMethod.Post)) {
  <button type="submit" class="btn btn-default">save autosave</button>
}

@using (Html.BeginForm("DeleteAutosave", "Admin", FormMethod.Post)) {
  if (Model.bAutosaveExist) {
    <button type="submit" class="btn btn-default">delete autosave</button>
  } else {
    <button type="submit" class="btn btn-default" disabled>delete autosave</button>
  }
}

@using (Html.BeginForm("LoadAutosave", "Admin", FormMethod.Post)) {
  <label for="files">autosave files:</label>
  @Html.DropDownListFor(m => m.sSelectedAutosaveFile, Model.ddlAutosaveFiles, new { @class = "form-control" })

  if (Model.bAutosaveExist) {
    <button type="submit" class="btn btn-default">load autosave</button>
  } else {
    <button type="submit" class="btn btn-default" disabled>load autosave</button>
  }
}

@{
  string sMapPath = Server.MapPath("~");
}
<h3>File Explorer</h3>
<text>Home Dir: @sMapPath<br></text>
<text id="txtCurDir">Current Dir: </text>
<input id="itCurDir" style="width: 30%" type="text" readonly>

<p></p>
<input id="itCd" style="width: 30%" type="text" autocomplete="off">
<button id="bnCd" type="submit" class="btn btn-default" onclick="changeDir();">Change Dir</button>
<div id="divFileExplorer"></div>
