@model CornerkickWebMvc.Models.TrainingModel

@{
  ViewBag.Title = "Training";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
  function setTraining(sct) {
    var iDay = parseInt(sct.getAttribute('data-iDay'));
    var iToD = parseInt(sct.getAttribute('data-iToD'));

    $.ajax({
      url: '/Member/setTraining',
      type: "GET",
      dataType: "JSON",
      data: { iTrainingType: sct.value, iDay: iDay + (iWeekGlobal * 7), iIxTimeOfDay: iToD },
      success: function () {
        plotTrainingDevelopment(false);
      }
    });
  }
</script>

<!DOCTYPE html>
<html>
<head>
  <meta name="viewport" content="width=device-width" />
  <script type="text/javascript" src="~/Scripts/jquery-2.0.0.min.js"></script>
  <script type="text/javascript" src="~/Scripts/canvasjs.min.js"></script>
  <script type="text/javascript" src="~/Scripts/moment.js"></script>

  <script type="text/javascript">
    dataPointsNew = [];
    var iWeekGlobal = 0;

    $(document).ready(function () {
      plotTrainingPlan(0);
      plotTrainingDevelopment(true);

      $.get("/Member/GetTeamFAve/", function (dataFAve) {
        var chartFAve = new CanvasJS.Chart("chartContainerFAve", {
          animationEnabled: true,
          theme: "theme2",//theme1
          title: {
            text: "Trainingsbonus"
          },
          axisX: {
            gridThickness: 1,
            interval: 1
          },
          axisY: {
            valueFormatString: "0.0%",
            includeZero: true
          },
          legend: {
            horizontalAlign: "center", // left, center ,right
            verticalAlign: "bottom",  // top, center, bottom
            dockInsidePlotArea: true
          },
          data: [
            {
              // Change type to "bar", "column", "splineArea", "area", "spline", "pie",etc.
              type: "column",
              indexLabel: "{y}",
              indexLabelFontColor: "#EEEEEE",
              indexLabelPlacement: "inside",
              yValueFormatString: "0.00%",
              dataPoints: [
                { label: "Schnelligkeit", y: dataFAve[0].y },
                { label: "Technik", y: dataFAve[1].y },
                { label: "Zweikampf", y: dataFAve[2].y },
                { label: "Abspiel", y: dataFAve[3].y },
                { label: "Abschluss", y: dataFAve[4].y },
                { label: "Standards", y: dataFAve[5].y },
                { label: "Torwart", y: dataFAve[6].y }
              ]
            }
          ]
        });

        chartFAve.render();
      });
    });

    var sTrainingNames = ["Frei", "Regeneration", "Kondition", "Spritzigkeit", "Zweikämpfe", "5 gegen 2", "Torschüsse", "Flanken / Abschluss", "Standardsituationen", "Trainingsspiel"];
    var dateOptions = { weekday: 'short', month: '2-digit', day: '2-digit' };
    function plotTrainingPlan(iWeek) {
      $.ajax({
        type: 'post',
        url: '/Member/TrainingGetPlan',
        dataType: "json",
        data: { iWeek: iWeek },
        success: function (ltTu) {
          var tblTrainingPlan = document.getElementById("tblTrainingPlan").getElementsByTagName('tbody')[0];
          while (tblTrainingPlan.hasChildNodes()) {
            tblTrainingPlan.removeChild(tblTrainingPlan.firstChild);
          }

          var iD;
          for (iD = 0; iD < ltTu.length; iD++) {
            var row = tblTrainingPlan.insertRow();

            var date = moment(ltTu[iD][0].dt).toDate();
            //row.insertCell(0).innerHTML = date.getDate() + "." + (date.getMonth() + 1);
            var cell0 = row.insertCell(0);
            cell0.innerHTML = date.toLocaleDateString("de-DE", dateOptions);
            cell0.style.textAlign = "right";
            cell0.style.fontWeight = 'bold';

            var iIxDay;
            for (iIxDay = 0; iIxDay < ltTu[iD].length; iIxDay++) {
              var sct = document.createElement("select");

              var iT;
              for (iT = 0; iT < sTrainingNames.length; iT++) {
                var opt = document.createElement('option');
                opt.value = iT;
                opt.innerHTML = sTrainingNames[iT];
                opt.selected = iT === ltTu[iD][iIxDay].iType;
                sct.appendChild(opt);
              }

              sct.classList.add('form-control');
              sct.style.width = "180px";
              if (ltTu[iD][iIxDay].iType < 0) {
                sct.disabled = true;
              } else {
                sct.setAttribute('data-iDay', iD);
                sct.setAttribute('data-iToD', iIxDay);
                sct.onchange = function () { setTraining(this); };
              }

              var cell = row.insertCell(iIxDay + 1);
              //cell.className = "alignRight";
              cell.appendChild(sct);
            }
          }
        }
      });
    }

    function changeWeek(iDeltaWeek) {
      iWeekGlobal += iDeltaWeek;
      plotTrainingPlan(iWeekGlobal);
    }

    function plotTrainingDevelopment(bAnimate) {
      var bExpected = document.getElementById("cbPlotExpected").checked;

      var selectCamp = document.getElementById("selectCamp");
      if (bExpected) {
        selectCamp.style.visibility = "visible";
      } else {
        selectCamp.style.visibility = "hidden";
      }

      $.ajax({
        type: 'post',
        url: '/Member/GetTeamDevelopmentData',
        dataType: "json",
        data: { bExpected: bExpected, iTrainingsCamp: $("#selectCamp").val() },
        success: function (dataKFM) {
          var chart = new CanvasJS.Chart("chartContainer", {
            animationEnabled: bAnimate,
            theme: "theme2",//theme1
            title: {
              text: "Mannschaftsentwicklung"
            },
            axisX: {
              gridThickness: 1,
              interval: 1,
              intervalType: "day",
              valueFormatString: "DDD DD MMM",
              labelAngle: -20
            },
            axisY: {
              valueFormatString: "0.0%",
              includeZero: false
            },
            legend: {
              horizontalAlign: "center", // left, center ,right
              verticalAlign: "bottom",  // top, center, bottom
              dockInsidePlotArea: true
            },
            data: [
              {
                // Change type to "bar", "splineArea", "area", "spline", "pie",etc.
                type: "line",
                color: "blue",
                showInLegend: true,
                legendText: "Kondition",
                xValueType: "dateTime",
                yValueFormatString: "0.0%",
                dataPoints: dataKFM[0][0]
              },
              {
                type: "line",
                color: "green",
                showInLegend: true,
                legendText: "Frische",
                xValueType: "dateTime",
                yValueFormatString: "0.0%",
                dataPoints: dataKFM[0][1]
              },
              {
                type: "line",
                color: "red",
                showInLegend: true,
                legendText: "Moral",
                xValueType: "dateTime",
                yValueFormatString: "0.0%",
                dataPoints: dataKFM[0][2]
              },
              {
                type: "line",
                color: "blue",
                lineDashType: "dash",
                lineThickness: 1,
                showInLegend: false,
                xValueType: "dateTime",
                yValueFormatString: "0.0%",
                dataPoints: dataKFM[1][0]
              },
              {
                type: "line",
                color: "green",
                lineDashType: "dash",
                lineThickness: 1,
                showInLegend: false,
                xValueType: "dateTime",
                yValueFormatString: "0.0%",
                dataPoints: dataKFM[1][1]
              },
              {
                type: "line",
                color: "red",
                lineDashType: "dash",
                lineThickness: 1,
                showInLegend: false,
                xValueType: "dateTime",
                yValueFormatString: "0.0%",
                dataPoints: dataKFM[1][2]
              }
            ]
          });

          chart.render();
        }
      });
    }
  </script>
</head>

<body>
  <h2>Training</h2>

  <div style="position: relative; width: 100%; height: auto; margin-bottom: 20px">
    <button type="submit" id="bnWeekPrev" class="btn btn-default" onclick="changeWeek(-1)" style="position: relative; width: 49%; left: 0px"><</button>
    <button type="submit" id="bnWeekNext" class="btn btn-default" onclick="changeWeek(+1)" style="position: relative; width: 49%; right: 0px">></button>
    <table id="tblTrainingPlan" border="1" cellpadding="4" style="position: relative; width: 100%; margin-top: 6px">
      <thead>
        <tr>
          <th style="text-align:center"></th>
          <th style="text-align:center">1. Training (9:30 Uhr)</th>
          <th style="text-align:center">2. Training (12:00 Uhr)</th>
          <th style="text-align:center">3. Training (16:30 Uhr)</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>
  </div>

  <div style="position: relative; width: 100%">
    <div id="chartContainer" style="height: 400px; width: 100%"></div>

    <label style="position: absolute; top: 0px; right: 0px; background-color: white">
      <input type="checkbox" id="cbPlotExpected" name="cbPlotExpected" value="0" onclick="plotTrainingDevelopment(true)" style="margin-left: 4px">
      Vorschau
    </label>
    <select name="Camp" id="selectCamp" onchange="plotTrainingDevelopment(false)" style="position: absolute; top: 20px; right: 0px; width: 80px; background-color: white; display: none">
      <option value="0">aus</option>
      @{
        foreach (CornerkickManager.TrainingCamp.Camp camp in MvcApplication.ckcore.tcp.ltCamps) {
          <option value="@camp.iId.ToString()">@camp.sName</option>
        }
      }
    </select>
  </div>

  <div id="chartContainerFAve" style="height: 400px; width: 100%; margin-top: 60px"></div>
</body>
</html>
