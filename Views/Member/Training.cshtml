@model CornerkickWebMvc.Models.TrainingModel

@{
  ViewBag.Title = "Training";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
  function setTraining(iTg) {
    var iTr = $('#iDdlId' + iTg).val();
    $.ajax({
      url: '/Member/setTraining',
      type: "GET",
      dataType: "JSON",
      data: { iTraining: iTr, iTag: iTg },
      success: function () {
        plotTrainingDevelopment(false);
        //alert(iTg);
      }
    });
  }
</script>

<!DOCTYPE html>
<html>
<head>
  <meta name="viewport" content="width=device-width" />
  <title>Index</title>
  <script type="text/javascript" src="~/Scripts/jquery-2.0.0.min.js"></script>
  <script type="text/javascript" src="~/Scripts/canvasjs.min.js"></script>
</head>

<body>
  <script type="text/javascript">
    dataPointsNew = [];

    $(document).ready(function () {
      plotTrainingDevelopment(true);

      $.get("/Member/GetTeamFAve/", function (dataFAve) {
        var chartFAve = new CanvasJS.Chart("chartContainerFAve", {
          animationEnabled: true,
          theme: "theme2",//theme1
          title: {
            text: "Mannschaftsdurchschnitt Fähigkeiten"
          },
          axisX: {
            gridThickness: 1,
            interval: 1
          },
          axisY: {
            valueFormatString: "0.0%",
            includeZero: true
          },
          legend: {
            horizontalAlign: "center", // left, center ,right
            verticalAlign: "bottom",  // top, center, bottom
            dockInsidePlotArea: true
          },
          data: [
            {
              // Change type to "bar", "column", "splineArea", "area", "spline", "pie",etc.
              type: "column",
              indexLabel: "{y}",
              indexLabelFontColor: "#EEEEEE",
              indexLabelPlacement: "inside",
              yValueFormatString: "0.00%",
              dataPoints: [
                { label: "Schnelligkeit", y: dataFAve[0].y },
                { label: "Technik", y: dataFAve[1].y },
                { label: "Zweikampf", y: dataFAve[2].y },
                { label: "Abspiel", y: dataFAve[3].y },
                { label: "Abschluss", y: dataFAve[4].y },
                { label: "Standards", y: dataFAve[5].y },
                { label: "Torwart", y: dataFAve[6].y }
              ]
            }
          ]
        });

        chartFAve.render();
      });
    });

    function plotTrainingDevelopment(bAnimate) {
      var bExpected = document.getElementById("cbPlotExpected").checked;

      $.ajax({
        type: 'post',
        url: '/Member/GetTeamDevelopmentData',
        dataType: "json",
        data: { bExpected: bExpected },
        success: function (dataKFM) {
          var chart = new CanvasJS.Chart("chartContainer", {
            animationEnabled: bAnimate,
            theme: "theme2",//theme1
            title: {
              text: "Mannschaftsentwicklung"
            },
            axisX: {
              gridThickness: 1,
              interval: 1,
              intervalType: "day",
              valueFormatString: "DDD DD MMM",
              labelAngle: -20
            },
            axisY: {
              valueFormatString: "0.0%",
              includeZero: false
            },
            legend: {
              horizontalAlign: "center", // left, center ,right
              verticalAlign: "bottom",  // top, center, bottom
              dockInsidePlotArea: true
            },
            data: [
              {
                // Change type to "bar", "splineArea", "area", "spline", "pie",etc.
                type: "line",
                color: "blue",
                showInLegend: true,
                legendText: "Kondition",
                xValueType: "dateTime",
                yValueFormatString: "0.0%",
                dataPoints: dataKFM[0][0]
              },
              {
                type: "line",
                color: "green",
                showInLegend: true,
                legendText: "Frische",
                xValueType: "dateTime",
                yValueFormatString: "0.0%",
                dataPoints: dataKFM[0][1]
              },
              {
                type: "line",
                color: "red",
                showInLegend: true,
                legendText: "Moral",
                xValueType: "dateTime",
                yValueFormatString: "0.0%",
                dataPoints: dataKFM[0][2]
              },
              {
                type: "line",
                color: "blue",
                lineDashType: "dash",
                lineThickness: 1,
                showInLegend: false,
                xValueType: "dateTime",
                yValueFormatString: "0.0%",
                dataPoints: dataKFM[1][0]
              },
              {
                type: "line",
                color: "green",
                lineDashType: "dash",
                lineThickness: 1,
                showInLegend: false,
                xValueType: "dateTime",
                yValueFormatString: "0.0%",
                dataPoints: dataKFM[1][1]
              },
              {
                type: "line",
                color: "red",
                lineDashType: "dash",
                lineThickness: 1,
                showInLegend: false,
                xValueType: "dateTime",
                yValueFormatString: "0.0%",
                dataPoints: dataKFM[1][2]
              }
            ]
          });

          chart.render();
        }
      });
    }
  </script>

  <h2>Training</h2>

  <div class="form-group">
    @{
      CornerkickCore.Core.Club club = CornerkickWebMvc.Controllers.AccountController.ckClub();
      if (club != null) {
        string[] sDayOfWeek = new string[7] { "So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", "Sa." };
        for (int i = 0; i < club.training.iTraining.Length; i++) {
          <label for="Wochentag">@sDayOfWeek[i]</label>
          @Html.DropDownListFor(m => m.sTraining, new SelectList(Model.ltDdlTraining, "Value", "Text", club.training.iTraining[i]), /* "--Select One--",*/ new { @class = "form-control", @onchange = "setTraining(" + i.ToString() + ")", id = "iDdlId" + i.ToString() })
        }
      }
    }
  </div>

  <div style="position: relative; width: 100%">
    <div id="chartContainer" style="height: 400px; width: 100%"></div>

    <label style="position: absolute; top: 0px; right: 0px; background-color: white">
      <input type="checkbox" id="cbPlotExpected" name="cbPlotExpected" value="0" onclick="plotTrainingDevelopment(true);" style="margin-left: 4px">
      Vorschau
    </label>
  </div>

  <div id="chartContainerFAve" style="height: 400px; width: 100%; margin-top: 60px"></div>
</body>
</html>
