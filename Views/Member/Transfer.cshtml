@model CornerkickWebMvc.Models.TransferModel

@{
  ViewBag.Title = "Transfer";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
  <link rel="stylesheet" href="~/Content/DataTables/css/jquery.dataTables.min.css" />
  <link rel="stylesheet" href="~/Content/DataTables/css/rowReorder.dataTables.min.css" />
  <link rel="stylesheet" href="~/Content/DataTables/css/responsive.dataTables.min.css" />
  <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
  <link rel="stylesheet" href="/resources/demos/style.css">
  <script type="text/javascript" src="~/Scripts/jquery-2.0.0.js"></script>
  <script type="text/javascript" src="~/Scripts/jquery-2.0.0.min.js"></script>
  <script type="text/javascript" src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
  <script type="text/javascript" src="~/Scripts/autoNumeric/autoNumeric-min.js"></script>
  <script type="text/javascript" src="~/Scripts/DataTables/jquery.dataTables.min.js"></script>
  <script type="text/javascript" src="~/Scripts/DataTables/dataTables.rowReorder.min.js"></script>
  <script type="text/javascript" src="~/Scripts/Player.js"></script>
  <script type="text/javascript" src="~/Scripts/Numbers.js"></script>

  <style>
    .disabledDivTransfer {
      pointer-events: none;
      opacity: 0.5;
    }
  </style>

  <style media="screen" type="text/css">
    tr.details-control td.symbol {
      background: url('/Content/Icons/plus.png') no-repeat center center;
      cursor: pointer;
    }

    tr.shown td.symbol {
      background: url('/Content/Icons/minus.png') no-repeat center center;
      cursor: pointer;
    }

    tr.nation td.symbol {
      background: url('/Content/Icons/flags/world.png') no-repeat center center;
      background-size: 32px 32px;
      cursor: pointer;
    }
  </style>

  <script type="text/javascript">
    var iPos = 0;

    var iAcceptPlId   = -1;
    var iAcceptClubId = -1;
    function handleClick(rBOffer) {
      bnAcceptOffer = document.getElementById("bnAcceptOffer");
      bnMakeOffer   = document.getElementById("bnMakeOffer");
      bnCancelOffer = document.getElementById("bnCancelOffer");
      bnAddToFavLst = document.getElementById("bnAddToFavLst");

      iAcceptClubId = rBOffer.value;

      bnMakeOffer  .style.display = "none";
      bnCancelOffer.style.display = "none";
      bnAddToFavLst.style.display = "none";

      if (iAcceptPlId >= 0) {
        bnAcceptOffer.style.display = "block";

        $.ajax({
          url: "/Member/GetPlayerName",
          type: 'POST',
          traditional: true,
          data: { iPlayer: iAcceptPlId },
          dataType: "json",
          success: function (sName) {
            $("#bnAcceptOffer").text("Angebot für " + sName + " annehmen");
          }
        });
      }
    }

    $(document).ready(function () {
      var bNation = @Html.Raw(Json.Encode(Model.bNation));

      bnMakeOffer = document.getElementById("bnMakeOffer");
      bnMakeOffer  .style.display = "none";
      bnAcceptOffer = document.getElementById("bnAcceptOffer");
      bnAcceptOffer.style.display = "none";
      bnCancelOffer = document.getElementById("bnCancelOffer");
      bnCancelOffer.style.display = "none";
      bnAddToFavLst = document.getElementById("bnAddToFavLst");
      bnAddToFavLst.style.display = "none";

      $("#tbTransferFee").autoNumeric('init', {
        aSep: '.',
        aDec: ',',
        mDec: '0'
      });

      $("#tbTransferFeeSecret").autoNumeric('init', {
        aSep: '.',
        aDec: ',',
        mDec: '0'
      });

      var jTable = $('#tableTransfer').DataTable({
        "ajax": {
          "url": '@Url.Action("getTableTransfer", "Member")',
          "type": 'POST',
          "data": function (d) {
            rbAll = document.getElementById("rbAll");
            rbFav = document.getElementById("rbFav");
            cbNoClub = document.getElementById("cbNoClub");
            rbJouth = document.getElementById("rbJouth");
            cbFixTransferFee = document.getElementById("cbFixTransferFee");

            var iType = 0;
            if (bNation) {
              iType = 1;
            } else {
              if (rbAll != null && rbAll.checked) {
                iType = 1;
              } else if (rbFav != null && rbFav.checked) {
                iType = 2;
              }
            }

            var iClubId = -9;
            if (cbNoClub != null && cbNoClub.checked) {
              iClubId = -1;
            }

            d.iPos    = $('#ddlFilterPos')  .val();
            d.iFType  = $('#ddlFilterFType').val();
            d.iFValue = $('#ddlFilterF')    .val();

            d.bJouth = false;
            if (rbJouth != null) {
              d.bJouth = rbJouth.checked;
            }

            d.iType = iType;

            d.bFixTransferFee = false;
            if (cbFixTransferFee != null) {
              d.bFixTransferFee = cbFixTransferFee.checked;
            }

            d.iClubId = iClubId;
            
            d.iNation = $('#ddlFilterNation').val();
          }
        },
        "info": false,
        "searching": true,
        'responsive': {
          'details': {
            'type': 'column',
            'target': 0
          }
        },
        "language": {
          "emptyTable": "Keine Einträge",
          "paginate": {
            next: '&#8594;', // or '→'
            previous: '&#8592;' // or '←'
          }
        },
        columnDefs: [
          {
            targets: 0,
            "className": "symbol",
            "orderable": false,
            "data": null,
            "defaultContent": '',
            "searchable": false
          },
          {
            targets: [1,2,3],
            "visible": false,
            "searchable": false
          }
        ],
        "columns": [
          { "data": null },
          { "data": "playerId" },
          { "data": "iOffer" },
          { "data": "index", "className": "dt-center" },
          { "data": "datum", "className": "dt-center" },
          {
            "data": "name",
            "className": "dt-center",
            "render": function (data, type, row) {
              return '@Html.ActionLink("name", "PlayerDetails", "Member", new { i = "id" }, new { target = "_blank" })'.replace("name", data).replace("id", row.playerId);
            }
          },
          { "data": "club", "className": "dt-center" },
          { "data": "position", "className": "dt-center" },
          { "data": "strength", "className": "dt-center" },
          { "data": "strengthIdeal", "className": "dt-center" },
          { "data": "age", "className": "dt-center" },
          { "data": "talent", "className": "dt-center" },
          {
            "data": "mw", "className": "dt-right",
            render: $.fn.dataTable.render.number('.', ',', 0, '')
          },
          {
            "data": "fixtransferfee", "className": "dt-right",
            render: $.fn.dataTable.render.number('.', ',', 0, '')
          },
          {
            "data": "nat",
            "className": "dt-center",
            "render": function (nat, type, row) {
              return getNatIcon(nat);
            }
          }
        ],
        "fnRowCallback": function (nRow, aData, iDisplayIndex) {
          if (aData.iOffer === 2 && bNation) { // Nation and already nominated
            $(nRow).addClass('nation');
          } else if (aData.iOffer > 0 && !bNation) { // Already offered or own player
            $(nRow).addClass('details-control');
          } else if (aData.iOffer === -1) { // Negotiation cancelled
            $('td', nRow).css('color', "rgb(180,180,180)");
          }

          if (aData.fixtransferfee <= 0) {
            $('td:eq(10)', nRow).html('-');
          }
        },
        "drawCallback": function (settings) {
          $("#divTransferlistContainer").removeClass("disabledDivTransfer");
          $("body").css("cursor", "default");
        }
      });

      // Filter
      $('#ddlFilterPos').on('change', function (ev) {
        reloadTransferlist(jTable);
      });

      $('#ddlFilterFType').on('change', function (ev) {
        reloadTransferlist(jTable);
      });

      $('#ddlFilterF').on('change', function (ev) {
        reloadTransferlist(jTable);
      });

      // Radio-buttons defence/offence
      $("#rbProfi").on('change', function (ev) {
        reloadTransferlist(jTable);
      });

      $("#rbJouth").on('change', function (ev) {
        reloadTransferlist(jTable);
      });

      $("#rbTransferlist").on('change', function (ev) {
        reloadTransferlist(jTable);
        bnAddToFavLst.innerHTML = "Zu Favoritenliste hinzufügen";
      });

      $("#rbAll").on('change', function (ev) {
        reloadTransferlist(jTable);
        bnAddToFavLst.innerHTML = "Zu Favoritenliste hinzufügen";
      });

      $("#rbFav").on('change', function (ev) {
        reloadTransferlist(jTable);
        bnAddToFavLst.innerHTML = "Von Favoritenliste entfernen";
      });

      $("#cbFixTransferFee").on('change', function (ev) {
        reloadTransferlist(jTable);
      });

      $("#cbNoClub").on('change', function (ev) {
        reloadTransferlist(jTable);
      });

      // Select row
      $('#tableTransfer tbody').on('click', 'tr', function () {
        if ($(this).hasClass('selected')) {
          $(this).removeClass('selected');
          $(this).removeClass('selected-Details');

          bnMakeOffer  .style.display = "none";
          bnCancelOffer.style.display = "none";
          bnAddToFavLst.style.display = "none";
        } else {
          jTable.$('tr.selected').removeClass('selected');
          $(this).addClass('selected');
          $(this).addClass('selected-Details');

          var data = jTable.rows('.selected').data();
          if (data) {
            iAcceptPlId = data[0].playerId;

            if (data[0].iOffer == 1) { // Already offered
              bnMakeOffer.innerHTML = "Angebot ändern";
              bnCancelOffer.style.display = "block";
            } else {
              if (bNation) {
                bnMakeOffer.innerHTML = "Spieler nominieren";
              } else {
                bnMakeOffer.innerHTML = "Spieler verpflichten";
              }
              bnCancelOffer.style.display = "none";
            }

            if (data[0].iOffer == 2) { // Own player
              bnMakeOffer.style.display = "none";
              bnAddToFavLst.style.display = "none";
              if (bNation) {
                bnMakeOffer.style.display = "block";
                bnMakeOffer.innerHTML = "Spieler ausladen";
              }
            } else if (data[0].iOffer == -2 && !bNation) { // Not on transfer list
              bnMakeOffer.style.display = "none";
              bnAddToFavLst.style.display = "block";
            } else {
              bnMakeOffer.style.display = "block";
              if (!bNation) {
                bnAddToFavLst.style.display = "block";
              }
            }
            bnAcceptOffer.style.display = "none";

            // Initialize transfer fee
            var sClubName = data[0].club;
            var iFixedFee = getIntFromString(data[0].fixtransferfee);
            var tbTransferFee = document.getElementById("tbTransferFee");
            var tbTransferFeeSecret = document.getElementById("tbTransferFeeSecret");
            if (sClubName === "vereinslos" || iFixedFee > 0) {
              tbTransferFee.disabled = true;
              tbTransferFeeSecret.disabled = true;
              if (iFixedFee > 0) {
                tbTransferFee.value = data[0].fixtransferfee;
              }
            } else {
              tbTransferFee.disabled = false;
              tbTransferFeeSecret.disabled = false;
              tbTransferFee.value = 0;
            }
          }
        }
      });

      // Add event listener for opening and closing details
      $('#tableTransfer tbody').on('click', 'tr.details-control td.symbol', function () {
        var tr = $(this).closest('tr');
        var row = jTable.row(tr);

        if (row.child.isShown()) {
          // This row is already open - close it
          row.child.hide();
          tr.removeClass('shown');
        } else {
          // Open this row
          data = row.data();
          $.when(getTableTransferDetailsAjax(data.playerId)).done(function (sChildTable) {
            row.child(sChildTable).show();
            tr.addClass('shown');
          });
        }
      });

      /*
      $("#bnMio").click(function () {
        var mio = Model.iTransferFee;
        alert(mio);
      });
      */

      $("#bnMakeOffer").click(function () {
        var data = jTable.rows('.selected').data();

        if (data) {
          var iIdPl = data[0].playerId;

          if (bNation) {
            $.ajax({
              url: "/Member/TransferNominatePlayer",
              type: 'POST',
              traditional: true,
              data: { iPlayerId: iIdPl },
              dataType: "json",
              success: function (ret) {
                if (ret == null) {
                  alert("Error");
                } else {
                  /*
                  if (ret) {
                    bnMakeOffer.innerHTML = "Spieler ausladen";
                  } else {
                    bnMakeOffer.innerHTML = "Spieler nominieren";
                  }
                  */
                  bnMakeOffer.style.display = "none";
                  jTable.ajax.reload();
                }
              }
            });
          } else {
            getContractDialog(document.body, iIdPl, true);
          }
        }
      });

      $("#bnCancelOffer").click(function () {
        cancelTransferOffer();
      });

      function cancelTransferOffer() {
        var data = jTable.rows('.selected').data();
        if (data) {
          var iIdPl = data[0].playerId;

          $.ajax({
            url: "/Member/CancelTransferOffer",
            type: 'POST',
            traditional: true,
            data: { iPlayerId: iIdPl },
            dataType: "json",
            success: function (response) {
              alert(response);
              window.location.reload(true);
            },
            error: function (xhr) {
              debugger;
              alert(xhr.error);
            }
          });
        }
      }

      $("#bnAddToFavLst").click(function () {
        var data = jTable.rows('.selected').data();
        if (data) {
          var iIdPl = data[0].playerId;

          $.ajax({
            url: "/Member/TransferAddToRemFromFavorites",
            type: 'POST',
            traditional: true,
            data: { iPlayerId: iIdPl },
            dataType: "json",
            success: function (response) {
              reloadTransferlist(jTable);
              //alert(response);
              //window.location.reload(true);
            },
            error: function (xhr) {
              debugger;
              alert(xhr.error);
            }
          });
        }
      });

      // Transfer Fee
      $("#dialogTransferFee").dialog({
        autoOpen: false,
        buttons: {
          "Bestätigen": function () {
            var data = jTable.rows('.selected').data();
            var iId = data[0].playerId;
            var iFee    = getIntFromString($("#tbTransferFee")      .val());
            var iFeeSec = getIntFromString($("#tbTransferFeeSecret").val());

            $.ajax({
              url: "/Member/MakeTransferOffer",
              type: 'POST',
              traditional: true,
              data: { iPlayerId: iId, iTransferFee: iFee, iTransferFeeSecret: iFeeSec },
              dataType: "json",
              success: function (response) {
                alert(response);

                jTable.ajax.reload();
                //window.location.reload(true);
              },
              error: function (xhr) {
                debugger;
                alert(xhr.error);
              }
            });

            $(this).dialog("close");
          },
          Cancel: function () {
            $(this).dialog("close");
          }
        }
      });

      // Accept Transfer offer
      $("#bnAcceptOffer").click(function () {
        if (iAcceptClubId >= 0 && iAcceptPlId >= 0) {
          $.ajax({
            url: "/Member/AcceptTransferOffer",
            type: 'POST',
            traditional: true,
            data: { iPlayerId: iAcceptPlId, iClubId: iAcceptClubId },
            dataType: "json",
            success: function (response) {
              alert(response);
              window.location.reload(true);
            },
            error: function (xhr) {
              debugger;
              alert(xhr.error);
            }
          });
        }
      });

      $(window).resize(function () {
        setView();
      });

      setView();
    });

    function reloadTransferlist(jTable) {
      $("#divTransferlistContainer").addClass("disabledDivTransfer");
      $("body").css("cursor", "progress");
      jTable.ajax.reload();
    }

    function setView() {
      //var divCbTransferlistAll = document.getElementById("divCbTransferlistAll");
      var divCb = document.getElementById("divCb");

      var fWidth = $(window).width();

      if (fWidth < 450) {
        //divCbTransferlistAll.style.marginTop = "0px"
        divCb.style.marginTop = "0px"
      } else {
        //divCbTransferlistAll.style.marginTop = "20px"
        divCb.style.marginTop = "16px"
      }
    }
  </script>
</head>

<body>
  <h3>Transferliste</h3>
  <div id="divTransferlistContainer">
    <div class="form-group" style="position: relative; width: 100%">
      <div style="position: relative; width: 262px; height: 54px; float: left; margin-bottom: 10px; margin-right: 10px">
       @if (!Model.bNation) {
          <div id="divCbTransferlistAll" align="center" style="position: absolute; width: 260px; height: 24px; top: 0px; border: 1px solid grey; -webkit-border-radius: 10px; -moz-border-radius: 10px">
            <form>
              <fieldset>
                <label style="font-size:100%; color: black; margin-right: 6px">
                  <input type="radio" id="rbTransferlist" name="rbTransferlistAll" value="0" checked>
                  Transferliste
                </label>
                <label style="font-size:100%; color: black; margin-right: 6px">
                  <input type="radio" id="rbAll" name="rbTransferlistAll" value="1">
                  Alle
                </label>
                <label style="font-size:100%; color: black">
                  <input type="radio" id="rbFav" name="rbTransferlistAll" value="2">
                  Favoriten
                </label>
              </fieldset>
            </form>
          </div>

          <div id="divCbProfiJouth" align="center" style="position: absolute; width: 170px; height: 24px; top: 30px; border: 1px solid grey; -webkit-border-radius: 10px; -moz-border-radius: 10px">
            <form>
              <fieldset>
                <label style="font-size:100%; color: black; margin-right: 4%">
                  <input type="radio" id="rbProfi" name="rbProfiJouth" value="0" checked>
                  Profis
                </label>
                <label style="font-size:100%; color: black">
                  <input type="radio" id="rbJouth" name="rbProfiJouth" value="1">
                  Jugend
                </label>
              </fieldset>
            </form>
          </div>
       }
      </div>

      <div style="position: relative; width: auto; float: left; margin-bottom: 10px; margin-right: 10px">
        <b class="left">Position:</b>
        @Html.DropDownListFor(m => m.sFilterPos, Model.ltDdlFilterPos, new { @class = "form-control", id = "ddlFilterPos", @style = "width:80px" })
      </div>

      <div style="position: relative; width: auto; float: left; margin-right: 10px; margin-bottom: 10px">
        <b class="left">Fähigkeit:</b>
        @Html.DropDownListFor(m => m.sFilterFType, Model.ltDdlFilterFType, new { @class = "form-control", id = "ddlFilterFType", @style = "width:160px" })
      </div>

      <div style="position: relative; width: auto; float: left; margin-right: 10px; margin-bottom: 10px">
        <b class="left">Wert:</b>
        @Html.DropDownListFor(m => m.sFilterF, Model.ltDdlFilterF, new { @class = "form-control", id = "ddlFilterF", @style = "width:60px" })
      </div>

      <div style="position: relative; width: auto; float: left; margin-right: 10px; margin-bottom: 10px">
        @Html.DropDownListFor(m => m.sFilterNation, Model.ddlFilterNation, new { @class = "form-control", id = "ddlFilterNation", @style = "width:160px", @disabled = "disabled" })
        @if (!Model.bNation) {
          Html.DropDownListFor(m => m.sFilterF, Model.ltDdlFilterF, new { @class = "form-control", id = "ddlFilterClub", @style = "width:160px", @disabled = "disabled" });
        }
      </div>

     @if (!Model.bNation) {
        <div id="divCb" style="position: relative; width: 100px; height: 44px; float: left; margin-top: 16px; margin-right: 10px; margin-bottom: 20px">
          <label style="position: absolute; top: 0px; left: 0px; width: 100%; background-color: white">
            <input id="cbFixTransferFee" type="checkbox" value="false">
            Fixe Ablöse
          </label>
          <label style="position: absolute; top: 20px; left: 0px; width: 100%; background-color: white">
            <input id="cbNoClub" type="checkbox" value="false">
            Vereinslos
          </label>
        </div>
      }
    </div>

    <table id="tableTransfer" cellspacing="0" style="width: auto" class="display responsive nowrap">
      <thead>
        <tr>
          <th></th>
          <th>IdPlayer</th>
          <th>iOffer</th>
          <th>#</th>
          <th>Datum</th>
          <th>Name</th>
          <th>Verein</th>
          <th>Position</th>
          <th>Stärke</th>
          <th>St. ber.</th>
          <th>Alter</th>
          <th>Talent</th>
          <th>Marktwert [€]</th>
          <th>Fixe Ablöse [€]</th>
          <th>Nat.</th>
        </tr>
      </thead>
      <tbody>
        <!---Data and tags are dynamically generated--->
      </tbody>
    </table>

    <button type="submit" id="bnMakeOffer"   class="btn btn-default" style="width: 100%; margin-top: 6px">Spieler verpflichten</button>
    <button type="submit" id="bnAcceptOffer" class="btn btn-default" style="width: 100%; margin-top: 4px">Angebot annehmen</button>
    <button type="submit" id="bnCancelOffer" class="btn btn-default" style="width: 100%; margin-top: 4px">Angebot zurückziehen</button>
    <button type="submit" id="bnAddToFavLst" class="btn btn-default" style="width: 100%; margin-top: 4px">Zu Favoritenliste hinzufügen</button>
  </div>

  <div id="dialogTransferFee" title="Ablöseverhandlungen">
    <div style="position: relative; width: 100%; height: 30px" class="form-group">
      <div style="position: absolute; width: 50%; height: auto; top: 10px; left: 6px" class="form-group">
        <b>Ablöse [€]:</b>
      </div>
      <div style="position: absolute; width: 50%; left: 50%" class="col-md-10">
        @Html.TextBoxFor(m => m.iTransferFee, new { @id = "tbTransferFee", @class = "form-control tbTransferFee", @type = "tel", @min = "0", @value = "0", @style = "text-align: right; width:100px", @autocomplete = "off" })
      </div>
    </div>

    <div style="position: relative; width: 100%; height: 50px; background-color: black; -webkit-border-radius: 10px; -moz-border-radius: 10px" class="form-group">
      <div style="position: absolute; width: 50%; height: auto; top: 18px; left: 6px" class="form-group">
        <b style="color: white">Handgeld [€]:</b>
      </div>
      <div style="position: absolute; width: 50%; left: 50%; top: 8px" class="col-md-10">
        @Html.TextBoxFor(m => m.iTransferFeeSecretBalance, new { @id = "tbTransferFeeSecret", @class = "form-control tbTransferFeeSecret", @type = "tel", @min = "0", @value = "0", @style = "text-align: right; width:100px", @autocomplete = "off" })
      </div>
    </div>
  </div>
</body>
</html>
