@model CornerkickWebMvc.Models.FinanceModel

@{
  ViewBag.Title = "Finance";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
  <meta name="viewport" content="width=device-width" />
  <title>Index</title>
  <script type="text/javascript" src="~/Scripts/jquery-2.0.0.min.js"></script>
  <script type="text/javascript" src="~/Scripts/canvasjs.min.js"></script>
  <script type="text/javascript" src="~/Scripts/autoNumeric/autoNumeric-min.js"></script>
  <script type="text/javascript" src="~/Scripts/Numbers.js"></script>
</head>

<body>
  <script type="text/javascript">
    function getBudget(bEdit, iYear, bSet) {
      if (iYear >= 0) bEdit = false;

      $.ajax({
        type: 'post',
        url: '/Member/FinanceGetBudgetPlan',
        dataType: "json",
        data: { iYear: iYear },
        success: function (iBudget) {
          // Plan
          if (bEdit) {
            if (bSet) {
              var inputIn = "<input class=\"form-control tbBudgetIn\" style=\"text-align: right\" type=\"tel\" autocomplete=\"off\" onkeyup=\"setBudget()\" value=";
              document.getElementById('tdInSpecPlan')         .innerHTML = inputIn + iBudget[0][0] + ">";
              document.getElementById('tdInBonusCupPlan')     .innerHTML = inputIn + iBudget[0][1] + ">";
              document.getElementById('tdInBonusSponsorPlan') .innerHTML = inputIn + iBudget[0][2] + ">";
              document.getElementById('tdInTransferPlan')     .innerHTML = inputIn + iBudget[0][3] + ">";
              document.getElementById('tdInMerchandisingPlan').innerHTML = inputIn + iBudget[0][4] + ">";
              document.getElementById('tdInMiscPlan')         .innerHTML = inputIn + iBudget[0][5] + ">";

              var inputPay = "<input class=\"form-control tbBudgetPay\" style=\"text-align: right\" type=\"tel\" autocomplete=\"off\" onkeyup=\"setBudget()\" value=";
              document.getElementById('tdPaySalaryPlan')       .innerHTML = inputPay + iBudget[0][ 6] + ">";
              document.getElementById('tdPayStaffPlan')        .innerHTML = inputPay + iBudget[0][ 7] + ">";
              document.getElementById('tdPayTransferPlan')     .innerHTML = inputPay + iBudget[0][ 8] + ">";
              document.getElementById('tdPayStadiumPlan')      .innerHTML = inputPay + iBudget[0][ 9] + ">";
              document.getElementById('tdPayTravelPlan')       .innerHTML = inputPay + iBudget[0][10] + ">";
              document.getElementById('tdPayInterestPlan')     .innerHTML = inputPay + iBudget[0][11] + ">";
              document.getElementById('tdPayMerchandisingPlan').innerHTML = inputPay + iBudget[0][12] + ">";
              document.getElementById('tdPayMiscPlan')         .innerHTML = inputPay + iBudget[0][13] + ">";
            }

            // Set thousand separator to text boxes
            $('.tbBudgetIn').each(function () {
              $(this).autoNumeric('init', {
                aSep: '.',
                aDec: ',',
                mDec: '0'
              });
            });

            $('.tbBudgetPay').each(function () {
              $(this).autoNumeric('init', {
                aSep: '.',
                aDec: ',',
                mDec: '0'
              });
            });
          } else {
            document.getElementById('tdInSpecPlan')          .innerHTML = iBudget[0][ 0].toLocaleString();
            document.getElementById('tdInBonusCupPlan')      .innerHTML = iBudget[0][ 1].toLocaleString();
            document.getElementById('tdInBonusSponsorPlan')  .innerHTML = iBudget[0][ 2].toLocaleString();
            document.getElementById('tdInTransferPlan')      .innerHTML = iBudget[0][ 3].toLocaleString();
            document.getElementById('tdInMerchandisingPlan') .innerHTML = iBudget[0][ 4].toLocaleString();
            document.getElementById('tdInMiscPlan')          .innerHTML = iBudget[0][ 5].toLocaleString();
            document.getElementById('tdPaySalaryPlan')       .innerHTML = iBudget[0][ 6].toLocaleString();
            document.getElementById('tdPayStaffPlan')        .innerHTML = iBudget[0][ 7].toLocaleString();
            document.getElementById('tdPayTransferPlan')     .innerHTML = iBudget[0][ 8].toLocaleString();
            document.getElementById('tdPayStadiumPlan')      .innerHTML = iBudget[0][ 9].toLocaleString();
            document.getElementById('tdPayTravelPlan')       .innerHTML = iBudget[0][10].toLocaleString();
            document.getElementById('tdPayInterestPlan')     .innerHTML = iBudget[0][11].toLocaleString();
            document.getElementById('tdPayMerchandisingPlan').innerHTML = iBudget[0][12].toLocaleString();
            document.getElementById('tdPayMiscPlan')         .innerHTML = iBudget[0][13].toLocaleString();
          };

          // Real
          document.getElementById('tdInSpecReal')          .innerHTML = iBudget[1][ 0].toLocaleString();
          document.getElementById('tdInBonusCupReal')      .innerHTML = iBudget[1][ 1].toLocaleString();
          document.getElementById('tdInBonusSponsorReal')  .innerHTML = iBudget[1][ 2].toLocaleString();
          document.getElementById('tdInTransferReal')      .innerHTML = iBudget[1][ 3].toLocaleString();
          document.getElementById('tdInMerchandisingReal') .innerHTML = iBudget[1][ 4].toLocaleString();
          document.getElementById('tdInMiscReal')          .innerHTML = iBudget[1][ 5].toLocaleString();
          document.getElementById('tdPaySalaryReal')       .innerHTML = iBudget[1][ 6].toLocaleString();
          document.getElementById('tdPayStaffReal')        .innerHTML = iBudget[1][ 7].toLocaleString();
          document.getElementById('tdPayTransferReal')     .innerHTML = iBudget[1][ 8].toLocaleString();
          document.getElementById('tdPayStadiumReal')      .innerHTML = iBudget[1][ 9].toLocaleString();
          document.getElementById('tdPayTravelReal')       .innerHTML = iBudget[1][10].toLocaleString();
          document.getElementById('tdPayInterestReal')     .innerHTML = iBudget[1][11].toLocaleString();
          document.getElementById('tdPayMerchandisingReal').innerHTML = iBudget[1][12].toLocaleString();
          document.getElementById('tdPayMiscReal')         .innerHTML = iBudget[1][13].toLocaleString();

          // Total
          document.getElementById('tdTotalInPlan') .innerHTML = iBudget[0][14].toLocaleString();
          document.getElementById('tdTotalInReal') .innerHTML = iBudget[1][14].toLocaleString();
          document.getElementById('tdTotalPayPlan').innerHTML = iBudget[0][15].toLocaleString();
          document.getElementById('tdTotalPayReal').innerHTML = iBudget[1][15].toLocaleString();

          // Summary
          for (var i = 0; i < 2; i++) {
            if (iBudget[i][16] < 0) {
              iBudget[i][16] = iBudget[i][16].toLocaleString().fontcolor("red");
            } else {
              iBudget[i][16] = iBudget[i][16].toLocaleString().fontcolor("green");
            }
          }
          document.getElementById('tdSumPlan').innerHTML = iBudget[0][16];
          document.getElementById('tdSumCurr').innerHTML = iBudget[1][16];
          document.getElementById('tdSumPlan').style.fontWeight = "bold"
          document.getElementById('tdSumCurr').style.fontWeight = "bold"
        }
      });
    }

    function setBudget() {
      var iBudgetIn = [];
      $('.tbBudgetIn').each(function () {
        iBudgetIn.push(getIntFromString($(this).val()));
      });

      var iBudgetPay = [];
      $('.tbBudgetPay').each(function () {
        iBudgetPay.push(getIntFromString($(this).val()));
      });

      $.ajax({
        type: 'post',
        url: '/Member/SetBudget',
        dataType: "json",
        //data: jsModel.budgetPlan,
        data: { iBudgetIn: iBudgetIn, iBudgetPay: iBudgetPay },
        success: function (result) {
          getBudget(@Html.Raw(Json.Encode(Model.bEditable)), -1, false);
        }
      });
    }

    $(document).ready(function () {
      var bEdit = @Html.Raw(Json.Encode(Model.bEditable));

      setEintritt();
      getBudget(bEdit, -1, true);

      iptFracSeasonalTickets = document.getElementById("iptFracSeasonalTickets");
      iptFracSeasonalTickets.addEventListener("change", setAdmissionPriceSeasonal);
      iptFracSeasonalTickets.addEventListener("keyup", setAdmissionPriceSeasonal);

      $('.tbEintritt').each(function () {
        $(this).on('change', function (ev) {
          setEintritt();
        });

        $(this).on('keyup', function (ev) {
          setEintritt();
        });
      });

      function setEintritt() {
        var eintritt = [];
        $('.tbEintritt').each(function () {
          eintritt.push($(this).val());
        });

        $.ajax({
          type: 'post',
          url: '/Member/FinanceSetAdmissionPrice',
          dataType: "json",
          data: { iEintritt: eintritt },
          success: function (sIncomeSpecExpected) {
            //alert("Eintrittspreise geändert");
            $("#lbInSpec").text("Einnahmen Liga bei 100% Auslastung: " + sIncomeSpecExpected);
          }
        });

        var iSeasonalTicketsTotal = @Model.iSeasonalTickets[0] + @Model.iSeasonalTickets[1] + @Model.iSeasonalTickets[2];
        $("#txtSeasonalTickets").text("Verkaufte Dauerkarten: " + iSeasonalTicketsTotal.toString() + " (" + @Model.iSeasonalTickets[0].ToString() + "/" + @Model.iSeasonalTickets[1].ToString() + "/" + @Model.iSeasonalTickets[2].ToString() + ")");
      }

      $('.tbPriceSeason').each(function () {
        $(this).on('change', function (ev) {
          setAdmissionPriceSeasonal();
        });

        $(this).on('keyup', function (ev) {
          setAdmissionPriceSeasonal();
        });
      });

      $('#ddlYear').on('change', function (ev) {
        getBudget(bEdit, $(this).val(), true);
      });

      $('#fBalanceSecretFracAdmissionPrice').keyup(function () {
        $.ajax({
          type: 'post',
          url: '/Member/FinanceSetBalanceSecret',
          dataType: "json",
          data: { fBalanceSecretFracAdmissionPrice: $(this).val() },
          success: function () {
          }
        });
      });

      function setAdmissionPriceSeasonal() {
        var price = [];
        $('.tbPriceSeason').each(function () {
          price.push($(this).val());
        });

        $.ajax({
          type: 'post',
          url: '/Member/FinanceSetAdmissionPriceSeasonal',
          dataType: "json",
          data: { iPrice: price, fSeasonalTicketsMaxFrac: iptFracSeasonalTickets.value },
          success: function () {
            //alert("Eintrittspreise geändert");
          }
        });
      }

      $('.tbBudgetIn').each(function () {
        $(this).on('keyup', function (ev) {
          //$(this).val(addThousandSepToNumber($(this).val()));
          setBudget();
        });
      });

      $('.tbBudgetPay').each(function () {
        $(this).on('keyup', function (ev) {
          setBudget();
        });
      });

      $.get("/Member/FinanceGetDevelopmentData/", function (dataCash) {
        var chart = new CanvasJS.Chart("chartContainer", {
          animationEnabled: true,
          theme: "theme2",//theme1
          axisX: {
            gridThickness: 1,
            interval: 7,
            intervalType: "day",
            valueFormatString: "DD MMM",
            labelAngle: -20
          },
          axisY: {
            valueFormatString: "#,,.",
            title: "Kontostand [mio. €]"
          },
          legend: {
            horizontalAlign: "center", // left, center ,right
            verticalAlign: "bottom",  // top, center, bottom
            dockInsidePlotArea: true
          },
          data: [
            {
              // Change type to "bar", "splineArea", "area", "spline", "pie",etc.
              type: "line",
              xValueType: "dateTime",
              dataPoints: dataCash
            }
          ]
        });

        chart.render();
      });

      $.get("/Member/FinanceGetSpec/", function (dataSpec) {
        var chartSpec = new CanvasJS.Chart("divChartSpec", {
          animationEnabled: true,
          theme: "theme2",//theme1
          axisX: {
            interval: 1,
            labelFontColor: "white",
            gridThickness: 1,
            maximum: -0.9
          },
          axisY: {
            title: "Zuschauer"
          },
          legend: {
            horizontalAlign: "right", // left, center, right
            verticalAlign: "top",  // top, center, bottom
            dockInsidePlotArea: true
          },
          toolTip: {
            shared: true,
            content: "{z}"
          },
          data: [
            {
              // Change type to "bar", "splineArea", "area", "spline", "pie",etc.
              type: "line",
              showInLegend: true,
              legendText: "Zuschauer",
              dataPoints: dataSpec[0]
            },
            {
              type: "line",
              color: "red",
              lineDashType: "dash",
              markerType: "none",
              lineThickness: 1,
              showInLegend: true,
              legendText: "Stadionkapazität",
              dataPoints: dataSpec[1]
            }
          ]
        });

        chartSpec.render();
      });
    });
  </script>

  <div style="width: 100%; height: 100%; min-height: 1200px">
    <h3>Finanzen</h3>

    <div id="chartContainer" style="height: 300px; width: 100%"></div>

    <h4 style="margin-top: 40px">Eintrittspreise</h4>
    <div style="position: relative; width: 100%; height: auto; float: left">
      <div style="position: relative; width: 220px; height: 170px; float: left">
        <div style="position: absolute; left: 42%; width: 6%; min-width: 60px; text-align: center">
          <strong>Einzel:</strong>
        </div>
        <div style="position: absolute; right: 0px; width: 8%; min-width: 70px; text-align: center">
          <strong>Saison:</strong>
        </div>

        @Html.LabelFor(m => m.iEintritt1, new { style = "position: absolute; top: 27px" })
        @Html.TextBoxFor(m => m.iEintritt1, new { @class = "form-control tbEintritt", autocomplete = "off", style = "position: absolute; top: 20px; left: 40%; width: 6%; min-width: 60px; text-align: right", type = "number" })
        @Html.TextBoxFor(m => m.iPriceSeason1, new { @class = "form-control tbPriceSeason", autocomplete = "off", style = "position: absolute; top: 20px; right: 0px; width: 8%; min-width: 70px; text-align: right", type = "number" })

        @Html.LabelFor(m => m.iEintritt2, new { style = "position: absolute; top: 62px" })
        @Html.TextBoxFor(m => m.iEintritt2, new { @class = "form-control tbEintritt", autocomplete = "off", style = "position: absolute; top: 55px; left: 40%; width: 6%; min-width: 60px; text-align: right", type = "number" })
        @Html.TextBoxFor(m => m.iPriceSeason2, new { @class = "form-control tbPriceSeason", autocomplete = "off", style = "position: absolute; top: 55px; right: 0px; width: 8%; min-width: 70px; text-align: right", type = "number" })

        @Html.LabelFor(m => m.iEintritt3, new { style = "position: absolute; top: 97px" })
        @Html.TextBoxFor(m => m.iEintritt3, new { @class = "form-control tbEintritt", autocomplete = "off", style = "position: absolute; top: 90px; left: 40%; width: 6%; min-width: 60px; text-align: right", type = "number" })
        @Html.TextBoxFor(m => m.iPriceSeason3, new { @class = "form-control tbPriceSeason", autocomplete = "off", style = "position: absolute; top: 90px; right: 0px; width: 8%; min-width: 70px; text-align: right", type = "number" })

        <label style="position: absolute; top: 132px">
          Max. Anteil Saisontick.:
        </label>
        @Html.TextBoxFor(m => m.fSeasonalTicketsMaxFrac, new { @class = "form-control", @id = "iptFracSeasonalTickets", autocomplete = "off", style = "position: absolute; top: 125px; right: 0px; width: 6%; min-width: 60px; text-align: right", type = "number" })
        <div style="position: absolute; top: 132px; right: -14px"><strong>%</strong></div>
      </div>

      <div id="divChartSpec" style="position: relative; float: right; height: 250px; width: 76%; min-width: 320px"></div>

      <div style="position: relative; width: 250px; float: left">
        <p id="lbInSpec" style="position: relative; width: 100%"></p>
        <text id="txtSeasonalTickets" style="position: relative; width: 100%"></text>
      </div>
    </div>

    <p style="position: relative; width: 100%; height: 40px; float: left"></p>

    <h4>Finanzplanung</h4>
    <div style="position: relative; width: 100%; top: 5%; float: left; margin-bottom: 40px">
      <div style="position: relative; width: 100%">
        <div style="position: absolute; top: -32px; right: 0px">
          <label>
            Jahr:
            @Html.DropDownListFor(m => m.sYear, Model.ddlYear, new { @class = "form-horizontal", id = "ddlYear", @style = "width:60px" })
          </label>
        </div>
      </div>
      <div style="position: relative; float: left; width: 49%; min-width: 320px; margin-right: 2%; margin-bottom: 2%; height: auto">
        <table id="tableBudgetIn" border="1" cellpadding="4" style="width: 100%" class="display responsive nowrap">
          <thead>
            <tr>
              <th style="text-align:center" colspan="3">Einnahmen</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="center" width="33%">Typ</td>
              <td align="center" width="33%">Geplant [€]</td>
              <td align="center" width="33%">Tatsächlich [€]</td>
            </tr>
            <tr>
              <td align="right">Zuschauer</td>
              <td id="tdInSpecPlan" style="width:20%" align="right"></td>
              <td id="tdInSpecReal" style="width:20%" align="right">0</td>
            </tr>
            <tr>
              <td align="right">Prämien</td>
              <td id="tdInBonusCupPlan" style="width:20%" align="right"></td>
              <td id="tdInBonusCupReal" style="width:20%" align="right">0</td>
            </tr>
            <tr>
              <td align="right">Sponsoren</td>
              <td id="tdInBonusSponsorPlan" style="width:20%" align="right"></td>
              <td id="tdInBonusSponsorReal" style="width:20%" align="right">0</td>
            </tr>
            <tr>
              <td align="right">Merchandising</td>
              <td id="tdInMerchandisingPlan" style="width:20%" align="right">0</td>
              <td id="tdInMerchandisingReal" style="width:20%" align="right">0</td>
            </tr>
            <tr>
              <td align="right">Transfer</td>
              <td id="tdInTransferPlan" style="width:20%" align="right">0</td>
              <td id="tdInTransferReal" style="width:20%" align="right">0</td>
            </tr>
            <tr>
              <td align="right">Sonstiges</td>
              <td id="tdInMiscPlan" style="width:20%" align="right">0</td>
              <td id="tdInMiscReal" style="width:20%" align="right">0</td>
            </tr>
            <tr>
              <td align="right">Gesamt</td>
              <td id="tdTotalInPlan" style="width:20%" align="right">0</td>
              <td id="tdTotalInReal" style="width:20%" align="right">0</td>
            </tr>
          </tbody>
        </table>
      </div>

      <div style="position: relative; float: left; width: 49%; min-width: 320px">
        <table id="tableBudgetPay" border="1" cellpadding="4" style="width: 100%" class="display responsive nowrap">
          <thead>
            <tr>
              <th style="text-align:center" colspan="3">Ausgaben</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="center" width="33%">Typ</td>
              <td align="center" width="33%">Geplant [€]</td>
              <td align="center" width="33%">Tatsächlich [€]</td>
            </tr>
            <tr>
              <td align="right">Spielerkosten</td>
              <td id="tdPaySalaryPlan" style="width:20%" align="right">0</td>
              <td id="tdPaySalaryReal" style="width:20%" align="right">0</td>
            </tr>
            <tr>
              <td align="right">Personalkosten</td>
              <td id="tdPayStaffPlan" style="width:20%" align="right">0</td>
              <td id="tdPayStaffReal" style="width:20%" align="right">0</td>
            </tr>
            <tr>
              <td align="right">Stadion &amp; Umg.</td>
              <td id="tdPayStadiumPlan" style="width:20%" align="right">0</td>
              <td id="tdPayStadiumReal" style="width:20%" align="right">0</td>
            </tr>
            <tr>
              <td align="right">Merchandising</td>
              <td id="tdPayMerchandisingPlan" style="width:20%" align="right">0</td>
              <td id="tdPayMerchandisingReal" style="width:20%" align="right">0</td>
            </tr>
            <tr>
              <td align="right">Transfer</td>
              <td id="tdPayTransferPlan" style="width:20%" align="right">0</td>
              <td id="tdPayTransferReal" style="width:20%" align="right">0</td>
            </tr>
            <tr>
              <td align="right">Reisekosten</td>
              <td id="tdPayTravelPlan" style="width:20%" align="right">0</td>
              <td id="tdPayTravelReal" style="width:20%" align="right">0</td>
            </tr>
            <tr>
              <td align="right">Zinsen</td>
              <td id="tdPayInterestPlan" style="width:20%" align="right">0</td>
              <td id="tdPayInterestReal" style="width:20%" align="right">0</td>
            </tr>
            <tr>
              <td align="right">Sonstiges</td>
              <td id="tdPayMiscPlan" style="width:20%" align="right">0</td>
              <td id="tdPayMiscReal" style="width:20%" align="right">0</td>
            </tr>
            <tr>
              <td align="right">Gesamt</td>
              <td id="tdTotalPayPlan" style="width:20%" align="right">0</td>
              <td id="tdTotalPayReal" style="width:20%" align="right">0</td>
            </tr>
          </tbody>
        </table>
      </div>

      <div style="position: relative; float: left; width: 100%; margin-top: 2%">
        <table border="1" cellpadding="4" style="width: 100%">
          <thead>
            <tr>
              <th style="text-align:center">Geplantes Ergebnis [€]</th>
              <th style="text-align:center">Tatsächliches Ergebnis [€]</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td id="tdSumPlan" align="right" font-weight:bold">0</td>
              <td id="tdSumCurr" align="right" font-weight:bold">0</td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>

    <div style="position: relative; float: right; width: 280px; background-color: black; -webkit-border-radius: 10px; -moz-border-radius: 10px">
      <div style="position: relative; width: 270px; left: 10px; margin-top: 4px; text-align: center">
        <div style="position: relative; width: 100%">
          <b style="color: white">Schwarze Kasse</b>
        </div>
        <p style="color: white">
          Inhalt: @Model.sBalanceSecret
        </p>
        <p style="color: white">
          Einbehaltene Zuschauereinnahmen [%]:
          @Html.TextBoxFor(m => m.fBalanceSecretFracAdmissionPrice, new { @class = "form-control", autocomplete = "off", style = "position: relative; left: 100px; text-align: right; width: 60px", type = "tel" })
        </p>
      </div>
    </div>

    @{
      if (Model.ltAccount.Count > 0) {
        <div style="position: relative; float: left; width: 70%">
          <h4>Kontoauszug</h4>
          <div style="position: relative; width: 100%; height: auto; top: 5%">
            <table border="1" cellpadding="4" style="width: auto">
              <thead>
                <tr>
                  <th align="center">Datum</th>
                  <th align="center">Betreff</th>
                  <th align="center">Umsatz €</th>
                  <th align="center">Kontostand €</th>
                </tr>
              </thead>
              <tbody>
                @for (int i = Model.ltAccount.Count - 1; i >= 0; i--) {
                  CornerkickManager.Finance.Account kto = Model.ltAccount[i];

                  string sUmsatz = "0";
                  if (kto.iValue != 0) { sUmsatz = kto.iValue.ToString("#,#", CornerkickWebMvc.Controllers.MemberController.getCiStatic(User)); }
                  string sStyle = "color: ";
                  if (kto.iValue < 0) {
                    sStyle += "red";
                  } else {
                    sStyle += "green";
                  }

                  string sKontostand = "0";
                  if (kto.iBalance != 0) { sKontostand = kto.iBalance.ToString("#,#", CornerkickWebMvc.Controllers.MemberController.getCiStatic(User)); }
                  <tr>
                    <td align="center">@kto.dt.ToString("d", CornerkickWebMvc.Controllers.MemberController.getCiStatic(User))</td>
                    <td align="center">@kto.sSubject</td>
                    <td align="right" style="@sStyle; border-color: black">@sUmsatz</td>
                    <td align="right">@sKontostand</td>
                  </tr>
                }
              </tbody>
            </table>
          </div>
        </div>
      }
    }
  </div>
</body>
</html>
