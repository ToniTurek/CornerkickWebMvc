@model CornerkickWebMvc.Models.MerchandisingModel

@{
  ViewBag.Title = "Merchandising";
  Layout = "~/Views/Shared/_Layout.cshtml";
}
<html style="height: 100%; min-height: 100%">
<head>
  <link rel="stylesheet" href="~/Content/DataTables/css/jquery.dataTables.min.css" />
  <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
  <script type="text/javascript" src="~/Scripts/jquery-2.0.0.min.js"></script>
  <script type="text/javascript" src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
  <script type="text/javascript" src="~/Scripts/DataTables/jquery.dataTables.min.js"></script>
  <script type="text/javascript" src="~/Scripts/autoNumeric/autoNumeric-min.js"></script>
  <script type="text/javascript" src="~/Scripts/Finance.js"></script>

  <style>
    .disabledDiv {
      pointer-events: none;
    }

    .columnBorderRight {
      border-right: 1px solid grey;
    }
  </style>

  <script>
    var oTable;
    var bEditable = false;

    $(document).ready(function () {
      bEditable = @Html.Raw(Json.Encode(Model.bFanshopsAvailable)) && !@Html.Raw(Json.Encode(Model.bMarketer));

      oTable = setTableItems();
    }); // $(document).ready

    function setTableItems() {
      return $('#tableItems').DataTable({
        "ajax": {
          "url": '@Url.Action("MerchandisingGetItems", "Member")',
          "type": 'GET',
          "dataType": "JSON",
          "cache": false,
          "contentType": "application/json; charset=utf-8"
        },
        "columns": [
          { "data": "iIx" },
          { "data": "iId" },
          { "data": "sName" },
          {
            "data": "iPresent",
            "render": $.fn.dataTable.render.number('.', ',', 0, '')
          },
          {
            "data": "iValuePresent",
            "render": $.fn.dataTable.render.number('.', ',', 0, '')
          },
          { "data": "sPricePresentBuyAve" },
          { "data": "sPriceBasic" },
          { "data": null },
          { "data": "sPriceBuy" },
          { "data": null },
          { "data": null },
          { "data": "sPriceSell" },
          {
            "data": "iSold",
            "render": $.fn.dataTable.render.number('.', ',', 0, '')
          },
          {
            "data": "iItemIncome",
            "render": $.fn.dataTable.render.number('.', ',', 0, '')
          },
          { "data": "sPriceSellAve" }
        ],
        "paging": false,
        "info": false,
        "searching": false,
        "language": {
          "emptyTable": "Keine Artikel verfügbar"
        },
        "columnDefs": [
          {
            "targets": [0, 1],
            "visible": false,
            "orderable": false,
            "searchable": false
          },
          {
            "targets": [3, 4, 6, 7, 8, 9, 11, 12, 13],
            "className": "dt-right"
          },
          {
            "targets": 2,
            "className": "dt-center columnBorderRight"
          },
          {
            "targets": [5, 10],
            "className": "dt-right columnBorderRight"
          },
          {
            "targets": 9,
            "defaultContent": '0 €',
            "data": null
          },
          {
            "targets": [5, 14],
            "defaultContent": '0.00 €',
            "className": "dt-right",
            "data": null
          },
          {
            "targets": [10, 11],
            "defaultContent": '',
            "orderable": false,
            "searchable": false,
            "data": null
          }
        ],
        "fnRowCallback": function (nRow, aData, iDisplayIndex) {
          $(nRow).addClass('details-control');

          var divAmount = document.createElement("div");
          divAmount.style.width = "100%";
          divAmount.align = "center";

          var divPriceSell = document.createElement("div");
          divPriceSell.style.width = "100%";
          divPriceSell.align = "center";
          var txtPrice = document.createElement("txt");
          txtPrice.style.right = "0px";

          var bnBuy = document.createElement("button");
          bnBuy.style.width = "80px";
          bnBuy.innerText = "kaufen";
          bnBuy.className = "btn btn-default";
          bnBuy.disabled = true;

          if (bEditable) {
            var itAmount = document.createElement("input");
            //itAmount.className = "itAutoNumeric";
            itAmount.type = "number";
            itAmount.style.width = "80px";
            itAmount.style.textAlign = "right";
            itAmount.value = 0;

            var itPrice = document.createElement("input");
            itPrice.type = "number";
            itPrice.step = "0.1";
            itPrice.min = "0.1";
            itPrice.style.width = "65px";
            itPrice.style.textAlign = "right";
            itPrice.value = aData.fPriceSell;
            divPriceSell.appendChild(itPrice);
            txtPrice.innerText = " €";

            itAmount.addEventListener("keyup", function () {
              if (this.value) {
                this.style.backgroundColor = "white";
                getPrice(aData.iId, parseInt(this.value), $("td:eq(5)", nRow), $("td:eq(6)", nRow), bnBuy);
              } else {
                this.style.backgroundColor = "red";
              }
            });
            divAmount.appendChild(itAmount);

            itPrice.addEventListener("keyup", function () {
              if (this.value) {
                this.style.backgroundColor = "white";
                setPrice(aData.iId, this.value);
              } else {
                this.style.backgroundColor = "red";
              }
            });

            bnBuy.addEventListener("click", function () {
              buyItem(aData.iId, parseInt(itAmount.value), $("td:eq(5)", nRow).text(), parseFloat(itPrice.value));
            });
          } else {
            var txtAmount = document.createElement("txt");
            txtAmount.style.right = "0px";
            txtAmount.innerText = "0";
            divAmount.appendChild(txtAmount);

            txtPrice.innerText = "? €";
          }
          divPriceSell.appendChild(txtPrice);

          $('td:eq(5)', nRow).html(divAmount);
          $('td:eq(8)', nRow).html(bnBuy);
          $('td:eq(9)', nRow).html(divPriceSell);

          return nRow;
        },
        "footerCallback": function (row, data, start, end, display) {
          var api = this.api(), data;

          // Remove the formatting to get integer data for summation
          var intVal = function (i) {
            return typeof i === 'string' ?
              i.replace(/[\$,]/g, '') * 1 :
              typeof i === 'number' ?
                i : 0;
          };

          // Calculate sum for columns 3, 11 and 12
          var iCn = 3;
          iSum = api.column(iCn).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
          $(api.column(iCn).footer()).html(iSum.toLocaleString());

          var iCn = 4;
          iSum = api.column(iCn).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
          $(api.column(iCn).footer()).html(iSum.toLocaleString());

          var iCn = 12;
          iSum = api.column(iCn).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
          $(api.column(iCn).footer()).html(iSum.toLocaleString());

          var iCn = 13;
          iSum = api.column(iCn).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
          $(api.column(iCn).footer()).html(iSum.toLocaleString());
        }
      });
    }

    function getPrice(iItemId, iAmount, cell1, cell2, bnBuy) {
      $.ajax({
        url: '/Member/getMerchandisingPrice',
        type: "GET",
        dataType: "JSON",
        data: { iItemId: iItemId, iAmount: iAmount },
        success: function (fPrice) {
          cell1.text(fPrice.toFixed(2) + " €");
          cell2.text((fPrice * iAmount).toLocaleString() + " €");
          bnBuy.disabled = iAmount === 0;
        },
        error: function (xhr) {
          alert(xhr.responseText);
        }
      });
    }

    function setPrice(iItemId, fPrice) {
      $.ajax({
        url: '/Member/setMerchandisingItemPrice',
        type: "GET",
        dataType: "JSON",
        data: { iItemId: iItemId, fPrice: fPrice },
        success: function (bReturn) {
          //
        },
        error: function (xhr) {
          alert(xhr.responseText);
        }
      });
    }

    function buyItem(iItemId, iAmount, sPriceBuy, fPriceSell) {
      $.when(getBalanceAjax()).done(function (iBalance) {
        $.ajax({
          url: '/Member/buyMerchandisingItem',
          type: "POST",
          dataType: "JSON",
          data: { iItemId: iItemId, iAmount: iAmount, sPriceBuy: sPriceBuy, fPriceSell: fPriceSell },
          success: function (bReturn) {
            if (bReturn) {
              oTable.ajax.reload();
              updateBalance(iBalance[0]);
            }
          },
          error: function (xhr) {
            alert(xhr.responseText);
          }
        });
      });
    }

    function takeMarketer() {
      $.ajax({
        url: '/Member/MerchandisingTakeMarketer',
        type: "POST",
        dataType: "JSON",
        success: function (bReturn) {
          if (bReturn) {
            window.location.reload(true);
          }
        },
        error: function (xhr) {
          alert(xhr.responseText);
        }
      });
    }
  </script>
</head>

<body style="width: 100%">
  <div>
    <div style="position: relative; margin-bottom: 40px">
      <h3>Vermarkter</h3>

      <table id="tableMarketer" style="position: relative; font-size: 16px" cellpadding="6" border="1">
        <tbody>
          <tr>
            @{
              if (Model.marketer == null) {
                <td><b>@MvcApplication.ckcore.ltMerchandisingMarketer[0].sName</b></td>
                <td>Angebot: @Model.sMarketerMoney</td>
                <td><button class="btn btn-default" style="width: 100px" onclick="takeMarketer()">annehmen</button></td>
              } else {
                <td><b>@Model.marketer.marketer.sName</b></td>
                <td>Bezahlt: @Model.sMarketerMoney</td>
              }
            }
            <td>Laufzeit: Saisonende</td>
          </tr>
          <!---Data and tags are dynamically generated--->
        </tbody>
      </table>
    </div>

    @*
    <label style="margin-left: 10px">
      Artikel:
      @Html.DropDownListFor(m => m.iItem, Model.sliMerchandisingItems, new { @class = "form-horizontal", @onchange = "update(this)", id = "sliMerchandisingItems" })
    </label>
    *@

    @{
      string sClassDisabled = "";
      if (Model.marketer != null) {
        sClassDisabled = " class=disabledDiv";
        <p><b>Sie das Merchandising einem Vermarkter überlassen</b></p>
      }
      if (!Model.bFanshopsAvailable) {
        sClassDisabled = " class=disabledDiv";
        <p><b>Sie benötigen mindestens einen <a href="/Member/StadiumSurroundings">Fanshop</a> um Ihr Merchandising selbst zu vermarkten</b></p>
      }
    }
    <div id="divTableItems" style="position: relative" @sClassDisabled>
      <h3>Artikel</h3>
      <table id="tableItems" style="position: relative; margin: 0px; width: auto; border: 1px solid black" class="display responsive nowrap">
        <thead>
          <tr>
            <th colspan="3" class="columnBorderRight"></th>
            <th colspan="3" style="text-align: center; font-size: 125%; background-color: orange" class="columnBorderRight">Bestand</th>
            <th colspan="5" style="text-align: center; font-size: 125%; background-color: lightgreen" class="columnBorderRight">Einkauf</th>
            <th colspan="4" style="text-align: center; font-size: 125%; background-color: lightblue">Verkauf</th>
          </tr>
          <tr>
            <th style="background-color: white">#</th>
            <th style="background-color: white">id</th>
            <th class="columnBorderRight" style="background-color: white">Artikel</th>
            <th style="text-align: center; background-color: white">Lager</th>
            <th style="text-align: center; background-color: white">Wert [€]</th>
            <th class="columnBorderRight" style="text-align: center; background-color: white">Ø-Preis</th>
            <th style="background-color: white">Grundpreis</th>
            <th style="background-color: white">Menge</th>
            <th style="background-color: white">Preis/Stück</th>
            <th style="background-color: white">Gesamtpreis</th>
            <th class="columnBorderRight" style="text-align: center; background-color: white"></th>
            <th style="background-color: white">Verkaufspreis</th>
            <th style="background-color: white">verkauft</th>
            <th style="background-color: white">Einnahmen [€]</th>
            <th style="background-color: white">Ø-Preis</th>
          </tr>
        </thead>
        <tbody>
          <!---Data and tags are dynamically generated--->
        </tbody>
        <tfoot>
          <tr>
            <th></th>
            <th></th>
            <th class="columnBorderRight">Summe:</th>
            <th></th>
            <th></th>
            <th class="columnBorderRight" style="text-align: right"></th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th class="columnBorderRight" style="text-align: right"></th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
          </tr>
        </tfoot>
      </table>
    </div>
  </div>
</body>
</html>
