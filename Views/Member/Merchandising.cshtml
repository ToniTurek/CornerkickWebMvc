@model CornerkickWebMvc.Models.MerchandisingModel

@{
  ViewBag.Title = "Merchandising";
  Layout = "~/Views/Shared/_Layout.cshtml";
}
<html style="height: 100%; min-height: 100%">
<head>
  <link rel="stylesheet" href="~/Content/DataTables/css/jquery.dataTables.min.css" />
  <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
  <script type="text/javascript" src="~/Scripts/jquery-2.0.0.min.js"></script>
  <script type="text/javascript" src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
  <script type="text/javascript" src="~/Scripts/DataTables/jquery.dataTables.min.js"></script>
  <script type="text/javascript" src="~/Scripts/autoNumeric/autoNumeric-min.js"></script>
  <script type="text/javascript" src="~/Scripts/Finance.js"></script>

  <style>
    .disabledDiv {
      pointer-events: none;
    }

    .columnBorderRight {
      border-right: 1px solid grey;
    }
  </style>

  <style media="screen" type="text/css">
    tr.details-control td.symbol {
      background: url('/Content/Icons/plus.png') no-repeat center center;
      cursor: pointer;
    }

    tr.shown td.symbol {
      background: url('/Content/Icons/minus.png') no-repeat center center;
      cursor: pointer;
    }
  </style>

  <script>
    var oTable;
    var bEditable = false;

    $(document).ready(function () {
      bEditable = @Html.Raw(Json.Encode(Model.bFanshopsAvailable)) && !@Html.Raw(Json.Encode(Model.bMarketer));

      var sctSeason = document.getElementById("sctSeason");

      oTable = setTableItems(sctSeason);

      $('#fBalanceSecretFracMerchandisingIncome').keyup(function () {
        $.ajax({
          url: '/Member/MerchandisingSetBalanceSecret',
          dataType: "json",
          data: { fBalanceSecret: $(this).val() },
          success: function (returnValue) {
            if (returnValue) {
              alert(returnValue);
            }
          }
        });
      });

      // Add event listener for opening and closing details
      $('#tableItems tbody').on('click', 'tr.details-control td.symbol', function () {
        var tr = $(this).closest('tr');
        var row = oTable.row(tr);

        if (row.child.isShown()) {
          // This row is already open - close it
          row.child.hide();
          tr.removeClass('shown');
        } else {
          // Open this row
          data = row.data();
          $.when(getJerseyItemSubTable()).done(function (sChildTable) {
            row.child(sChildTable).show();
            tr.addClass('shown');
          });
        }
      });

      // Season selector
      sctSeason.selectedIndex = "0";
      sctSeason.addEventListener("change", function () {
        if (this.value < 0) {
          bEditable = @Html.Raw(Json.Encode(Model.bFanshopsAvailable)) && !@Html.Raw(Json.Encode(Model.bMarketer));
        } else {
          bEditable = false;
        }

        oTable.ajax.reload();
      });
    }); // $(document).ready

    function getJerseyItemSubTable() {
      return $.ajax({
        type: 'GET',
        url: "/Member/MerchandisingGetJerseyItemSubTable",
        dataType: "json",
        success: function (sTable) {
        }
      });
    }

    function setTableItems(sctSeason) {
      var sColumnAmount = "6";
      var sColumnPricePiece = "7";
      var sColumnPriceTotal = "8";

      return $('#tableItems').DataTable({
        "ajax": {
          "url": '@Url.Action("MerchandisingGetItems", "Member")',
          "type": 'GET',
          "dataType": "JSON",
          "cache": false,
          "contentType": "application/json; charset=utf-8",
          "data": function (d) {
            var iSeason = -1;
            if (sctSeason) { iSeason = sctSeason.value; }

            d.iSeason = iSeason;
          }
        },
        "columns": [
          { "data": null },
          { "data": "iIx" },
          { "data": "iId" },
          { "data": "sName" },
          {
            "data": "iPresent",
            "render": $.fn.dataTable.render.number('.', ',', 0, '')
          },
          {
            "data": "iValuePresent",
            "render": $.fn.dataTable.render.number('.', ',', 0, '')
          },
          { "data": "sPricePresentBuyAve" },
          { "data": "sPriceBasic" },
          { "data": null },
          { "data": "sPriceBuy" },
          { "data": null },
          { "data": null },
          { "data": "sPriceSell" },
          {
            "data": "iSold",
            "render": $.fn.dataTable.render.number('.', ',', 0, '')
          },
          {
            "data": "iItemIncome",
            "render": $.fn.dataTable.render.number('.', ',', 0, '')
          },
          {
            "data": "iWinLoose",
            "render": $.fn.dataTable.render.number('.', ',', 0, '')
          },
          { "data": "sPriceSellAve" },
          { "data": "bPlayerJersey" }
        ],
        "paging": false,
        "info": false,
        "searching": false,
        "language": {
          "emptyTable": "Keine Artikel verfügbar"
        },
        "columnDefs": [
          {
            "targets": 0,
            "className": "symbol",
            "orderable": false,
            "data": null,
            "defaultContent": '',
            "searchable": false
          },
          {
            "targets": [1, 2, 17],
            "visible": false,
            "orderable": false,
            "searchable": false
          },
          {
            "targets": [4, 5, 7, 8, 9, 10, 12, 13, 14, 15],
            "className": "dt-right"
          },
          {
            "targets": 3,
            "className": "dt-center columnBorderRight"
          },
          {
            "targets": [6, 11],
            "className": "dt-right columnBorderRight"
          },
          {
            "targets": 10,
            "defaultContent": '0 €',
            "data": null
          },
          {
            "targets": [6, 16],
            "defaultContent": '0.00 €',
            "className": "dt-right",
            "data": null
          },
          {
            "targets": [11, 12],
            "defaultContent": '',
            "orderable": false,
            "searchable": false,
            "data": null
          }
        ],
        "fnRowCallback": function (nRow, aData, iDisplayIndex) {
          var divAmount = document.createElement("div");
          divAmount.style.width = "100%";
          divAmount.align = "center";

          var divPriceSell = document.createElement("div");
          divPriceSell.style.width = "100%";
          divPriceSell.align = "center";
          var txtPrice = document.createElement("txt");
          txtPrice.style.right = "0px";

          var bnBuy = document.createElement("button");
          bnBuy.style.width = "80px";
          bnBuy.innerText = "kaufen";
          bnBuy.className = "btn btn-default";
          bnBuy.disabled = true;

          if (bEditable) {
            var itAmount = document.createElement("input");
            //itAmount.className = "itAutoNumeric";
            itAmount.type = "number";
            itAmount.style.width = "80px";
            itAmount.style.textAlign = "right";
            itAmount.value = 0;

            var itPrice = document.createElement("input");
            itPrice.type = "number";
            itPrice.step = "0.1";
            itPrice.min = "0.1";
            itPrice.style.width = "65px";
            itPrice.style.textAlign = "right";
            itPrice.value = aData.fPriceSell;
            divPriceSell.appendChild(itPrice);
            txtPrice.innerText = " €";

            itAmount.addEventListener("keyup", function () {
              if (this.value) {
                this.style.backgroundColor = "white";
                getPrice(aData.iId, parseInt(this.value), $("td:eq(" + sColumnPricePiece + ")", nRow), $("td:eq(" + sColumnPriceTotal + ")", nRow), bnBuy);
              } else {
                this.style.backgroundColor = "red";
              }
            });
            divAmount.appendChild(itAmount);

            itPrice.addEventListener("keyup", function () {
              if (this.value) {
                this.style.backgroundColor = "white";
                setPrice(aData.iId, this.value);
              } else {
                this.style.backgroundColor = "red";
              }
            });

            bnBuy.addEventListener("click", function () {
              this.disabled = true;
              buyItem(aData.iId, parseInt(itAmount.value), $("td:eq(" + sColumnPricePiece + ")", nRow).text(), itPrice.value);
            });
          } else {
            var txtAmount = document.createElement("txt");
            txtAmount.style.right = "0px";
            txtAmount.innerText = "0";
            divAmount.appendChild(txtAmount);

            txtPrice.innerText = aData.fPriceSell.toFixed(2) + " €";
          }
          divPriceSell.appendChild(txtPrice);

          $('td:eq(' + sColumnAmount + ')', nRow).html(divAmount);
          $('td:eq(9)', nRow).html(bnBuy);
          $('td:eq(10)', nRow).html(divPriceSell);

          // Color win/loose column
          if (aData.iWinLoose > 0) {
            $('td:eq(13)', nRow).css('color', "green");
          } else if (aData.iWinLoose < 0) {
            $('td:eq(13)', nRow).css('color', "red");
          }

          if (aData.bPlayerJersey) {
            $(nRow).addClass('details-control');
          }

          return nRow;
        },
        "footerCallback": function (row, data, start, end, display) {
          var api = this.api(), data;

          // Remove the formatting to get integer data for summation
          var intVal = function (i) {
            return typeof i === 'string' ?
              i.replace(/[\$,]/g, '') * 1 :
              typeof i === 'number' ?
                i : 0;
          };

          // Calculate sum for columns 3, 11 and 12
          var iCn = 4;
          iSum = api.column(iCn).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
          $(api.column(iCn).footer()).html(iSum.toLocaleString());

          var iCn = 5;
          iSum = api.column(iCn).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
          $(api.column(iCn).footer()).html(iSum.toLocaleString());

          var iCn = 13;
          iSum = api.column(iCn).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
          $(api.column(iCn).footer()).html(iSum.toLocaleString());

          var iCn = 14;
          iSum = api.column(iCn).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
          $(api.column(iCn).footer()).html(iSum.toLocaleString());

          var iCn = 15;
          iSum = api.column(iCn).data().reduce(function (a, b) { return intVal(a) + intVal(b); }, 0);
          $(api.column(iCn).footer()).html(iSum.toLocaleString(/*undefined, { style: 'currency', currency: 'EUR', minimumFractionDigits: 0 }*/));
          if (iSum > 0) {
            $(api.column(iCn).footer()).css('color', "green");
          } else if (iSum < 0) {
            $(api.column(iCn).footer()).css('color', "red");
          }
        }
      });
    }

    function getPrice(iItemId, iAmount, cell1, cell2, bnBuy) {
      $.ajax({
        url: '/Member/getMerchandisingPrice',
        type: "GET",
        dataType: "JSON",
        data: { iItemId: iItemId, iAmount: iAmount },
        success: function (fPrice) {
          cell1.text(fPrice.toFixed(2) + " €");
          cell2.text((fPrice * iAmount).toLocaleString() + " €");
          bnBuy.disabled = iAmount === 0;

          // Calculate sum and add to table footer
          var tbl = document.getElementById("tableItems");
          var iColumn = 0;
          var iSum = 0;

          iColumn = 6;
          iSum = 0;
          for (var i = 0, row; row = tbl.tBodies[0].rows[i]; i++) {
            var ipt = row.cells[iColumn].getElementsByTagName("input")[0];
            iSum = iSum + parseInt(ipt.value);
          }
          tbl.tFoot.rows[0].cells[iColumn].innerText = iSum.toLocaleString();

          iColumn = 8;
          iSum = 0;
          for (var i = 0, row; row = tbl.tBodies[0].rows[i]; i++) {
            iSum = iSum + parseInt(row.cells[iColumn].innerText.replace(/\./g, '').replace('€'));
          }
          tbl.tFoot.rows[0].cells[iColumn].innerText = iSum.toLocaleString() + " €";
        },
        error: function (xhr) {
          alert(xhr.responseText);
        }
      });
    }

    function setPrice(iItemId, fPrice) {
      $.ajax({
        url: '/Member/setMerchandisingItemPrice',
        type: "GET",
        dataType: "JSON",
        data: { iItemId: iItemId, fPrice: fPrice },
        success: function (bReturn) {
          //
        },
        error: function (xhr) {
          alert(xhr.responseText);
        }
      });
    }

    function buyItem(iItemId, iAmount, sPriceBuy, sPriceSell) {
      $.when(getBalanceAjax()).done(function (iBalance) {
        $.ajax({
          url: '/Member/buyMerchandisingItem',
          type: "POST",
          dataType: "JSON",
          data: { iItemId: iItemId, iAmount: iAmount, sPriceBuy: sPriceBuy, sPriceSell: sPriceSell },
          success: function (bReturn) {
            if (bReturn) {
              oTable.ajax.reload();
              updateBalance(iBalance[0]);
            }
          },
          error: function (xhr) {
            alert(xhr.responseText);
          }
        });
      });
    }

    function takeMarketer() {
      $.ajax({
        url: '/Member/MerchandisingTakeMarketer',
        type: "POST",
        dataType: "JSON",
        success: function (bReturn) {
          if (bReturn) {
            window.location.reload(true);
          }
        },
        error: function (xhr) {
          alert(xhr.responseText);
        }
      });
    }
  </script>
</head>

<body style="width: 100%">
  <div style="position: relative; width: 100%">
    <div style="position: absolute; top: 0px; right: 0px; z-index: 99">
      <label>
        Jahr:
        @Html.DropDownListFor(m => m.sSeason, Model.sctSeason, new { @class = "form-horizontal", id = "sctSeason", @style = "width:60px" })
      </label>
    </div>

    <div style="position: relative; margin-bottom: 40px">
      <h3>Vermarkter</h3>

      <table id="tableMarketer" style="position: relative; font-size: 16px" cellpadding="6" border="1">
        <tbody>
          <tr>
            @{
              if (Model.marketer == null) {
                <td><b>@MvcApplication.ckcore.ltMerchandisingMarketer[0].sName</b></td>
                <td>Angebot: @Model.sMarketerMoney&nbsp;€</td>
                <td><button class="btn btn-default" style="width: 100px" onclick="takeMarketer()">annehmen</button></td>
              } else {
                <td><b>@Model.marketer.marketer.sName</b></td>
                <td>Bezahlt: @Model.sMarketerMoney&nbsp;€</td>
              }
            }
            <td>Laufzeit: Saisonende</td>
          </tr>
          <!---Data and tags are dynamically generated--->
        </tbody>
      </table>
    </div>

    @*
    <label style="margin-left: 10px">
      Artikel:
      @Html.DropDownListFor(m => m.iItem, Model.sliMerchandisingItems, new { @class = "form-horizontal", @onchange = "update(this)", id = "sliMerchandisingItems" })
    </label>
    *@

    @{
      string sClassDisabled = "";
      if (Model.marketer != null) {
        sClassDisabled = " class=disabledDiv";
        <p><b>Sie das Merchandising einem Vermarkter überlassen</b></p>
      }
      if (!Model.bFanshopsAvailable) {
        sClassDisabled = " class=disabledDiv";
        <p><b>Sie benötigen mindestens einen <a href="/Member/StadiumSurroundings">Fanshop</a> um Ihr Merchandising selbst zu vermarkten</b></p>
      }
    }
    <div id="divTableItems" style="position: relative" @sClassDisabled>
      <h3>Artikel</h3>
      <table id="tableItems" style="position: relative; margin: 0px; width: auto; border: 1px solid black" class="display responsive nowrap">
        <thead>
          <tr>
            <th></th>
            <th colspan="3" class="columnBorderRight"></th>
            <th colspan="3" style="text-align: center; font-size: 125%; background-color: orange" class="columnBorderRight">Bestand</th>
            <th colspan="5" style="text-align: center; font-size: 125%; background-color: lightgreen" class="columnBorderRight">Einkauf</th>
            <th colspan="5" style="text-align: center; font-size: 125%; background-color: lightblue">Verkauf</th>
            <th></th>
          </tr>
          <tr>
            <th></th>
            <th style="background-color: white">#</th>
            <th style="background-color: white">id</th>
            <th class="columnBorderRight" style="background-color: white">Artikel</th>
            <th style="text-align: center; background-color: white">Lager</th>
            <th style="text-align: center; background-color: white">Wert [€]</th>
            <th class="columnBorderRight" style="text-align: center; background-color: white">Ø-Preis</th>
            <th style="background-color: white">Grundpreis</th>
            <th style="background-color: white">Menge</th>
            <th style="background-color: white">Preis/Stück</th>
            <th style="background-color: white">Gesamtpreis</th>
            <th class="columnBorderRight" style="text-align: center; background-color: white"></th>
            <th style="background-color: white">Verkaufspreis</th>
            <th style="background-color: white">verkauft</th>
            <th style="background-color: white">Einnahmen [€]</th>
            <th style="background-color: white">G/V [€]</th>
            <th style="background-color: white">Ø-Preis</th>
            <th>bPlayerJersey</th>
          </tr>
        </thead>
        <tbody>
          <!---Data and tags are dynamically generated--->
        </tbody>
        <tfoot>
          <tr>
            <th></th>
            <th></th>
            <th></th>
            <th class="columnBorderRight">Summe:</th>
            <th></th>
            <th></th>
            <th class="columnBorderRight" style="text-align: right"></th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th class="columnBorderRight" style="text-align: right"></th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
          </tr>
        </tfoot>
      </table>
    </div>

    <div style="position: relative; width: 220px; height: 80px; margin-top: 10px; background-color: black; -webkit-border-radius: 10px; -moz-border-radius: 10px">
      <div style="position: relative; width: 210px; left: 10px; margin-top: 4px; text-align: center">
        <div style="position: relative; width: 100%">
          <b style="color: white">Schwarze Kasse</b>
        </div>
        <p style="color: white">
          Einbehaltene Einnahmen [%]:
          @Html.TextBoxFor(m => m.fBalanceSecretFracMerchandisingIncome, new { @class = "form-control", autocomplete = "off", style = "position: relative; left: 80px; text-align: right; width: 60px", type = "tel" })
        </p>
      </div>
    </div>
  </div>
</body>
</html>
