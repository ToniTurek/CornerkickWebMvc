@model CornerkickWebMvc.Models.UserManualModel

@{
  ViewBag.Title = "User Manual";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html>
<head>
  <meta name="viewport" content="width=device-width" />
  <title>Index</title>
  <script type="text/javascript" src="https://canvasjs.com/assets/script/jquery-1.11.1.min.js"></script>
  <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
</head>
<body>
  <script type="text/javascript">
    $(document).ready(function () {
      $.get("/Home/UmGetStadiumCost/", function (dataStadiumCost) {
        var chart = new CanvasJS.Chart("chartContainerStadiumCost", {
          animationEnabled: false,
          theme: "theme2",//theme1
          axisX: {
            title: "auszubauende Plätze",
            labelFontSize: 14,
            gridThickness: 1,
            interval: 500,
          },
          axisY: {
            title: "Kosten [mio. €]",
            labelFontSize: 14,
            valueFormatString: "#,,."
          },
          legend: {
            horizontalAlign: "left", // left, center ,right
            verticalAlign: "top",  // top, center, bottom
            dockInsidePlotArea: true
          },
          data: [
            {
              // Change type to "bar", "splineArea", "area", "spline", "pie",etc.
              type: "line",
              showInLegend: true,
              legendText: "0 Pl. vorhanden",
              dataPoints: dataStadiumCost[0]
            },
            {
              // Change type to "bar", "splineArea", "area", "spline", "pie",etc.
              type: "line",
              showInLegend: true,
              legendText: "1000 Pl. vorhanden",
              dataPoints: dataStadiumCost[1]
            },
            {
              // Change type to "bar", "splineArea", "area", "spline", "pie",etc.
              type: "line",
              showInLegend: true,
              legendText: "2000 Pl. vorhanden",
              dataPoints: dataStadiumCost[2]
            }
          ]
        });

        chart.render();
      });
    });
  </script>
</body>
</html>

<h2>Erste Schritte</h2>
Die wichtigsten Schritte zu Beginn des Spiels sind folgende:
<ul>
  <li>
    <u>Machen Sie sich mit Ihrer <a href="#h3Team">Mannschaft</a> vertraut</u><br />
    Dazu klicken Sie im oberen Reiter auf <i>Mannschaft->Aufstellung</i> (oder auf <i>Durchschnittsstärke (Startelf): X,XX (Y,YY)</i> im Hauptmenü). Durch klicken auf einen Spieler in der Aufstellungstabelle erhalten Sie detailliertere Informationen zu diesem Spieler.
  </li>
  <li>
    <u>Wählen Sie für jeden Ihrer Spieler sein individuelles Training</u><br />
    Im Spielermenü (s. O.) können Sie diejenige Eigenschaft festlegen, an welcher der Spieler arbeiten soll. Hier können Sie auch die Namen und Rückennummern der Spieler ändern. Jedoch nur am ersten Tag des Spiels!
  </li>
  <li>
    <u>Wählen Sie Ihren Kapitän und Vize-Kapitän</u><br />
    Ebenfalls im Spielermenü können Sie einen Spieler zum (Vize-)Kapitän ernennen.
  </li>
  <li>
    <u>Stellen Sie <a href="#h3Stuff">Personal</a> ein</u><br />
    Über das Menü <i>Verein->Personal</i> können Sie Personal einstellen. Beachten Sie, dass Sie das Personal immer für eine Saison einstellen. Wollen Sie Ihr Personal später ändern, fallen Abfindungen in Höhe von 50% des restlichen Gehalts an.
  </li>
  <li>
    <u>Legen Sie das Mannschaftstraining fest</u><br />
    Über das Menü <i>Mannschaft->Training</i> (oder durch klick auf <i>K: X%, F: Y%, M: Z%</i> im Hauptmenü) können Sie das Mannschaftstraining festlegen. Am Beginn einer Saison sollten Sie vermehrt auf die Kondition achten. Während der Saison, dass die Spieler vor dem nächsten Spiel frisch sind.
  </li>
  <li>
    <u>Schauen Sie sich auf dem Transfermarkt um</u><br />
    Über das Menü <i>Büro->Transfermarkt</i> können Sie nach Spielern schauen um Ihre Mannschaft zu verstärken.
  </li>
  <li>
    <u>Planen Sie Testspiele</u><br />
    Über das Menü <i>Saison->Kalender</i> (oder durch klick auf das Datum) kommen Sie in die Kalenderübersicht. Durch klick auf ein Datum haben Sie die Wahl zwischen der Anfrage eines Testspiels und der Buchung eines Trainingslagers.
  </li>
  <li>
    <u>Machen Sie Ihre Finanzplanung</u><br />
    Über das Menü <i>Verein->Finanzen</i> (oder durch klick auf den Kontostand) können Sie die Finanzplanung für die kommende Saison durchführen. Hier können Sie auch die Eintrittspreise festlegen. Die Finanzplanung kann nur am ersten Tag jeder Saison festgelegt werden!
  </li>
  <li>
    <u>Geben Sie Ihrem Stadion einen Namen</u><br />
    Über das Menü <i>Verein->Stadion</i> gelangen Sie zu Ihrem Stadion. Hier können Sie den Namen des Stadions ändern. Jedoch nur am ersten Tag des Spiels!
  </li>
</ul>

<h2>Mannschaft</h2>
<h3 id="h3Team">Aufstellung</h3>
Auf der unteren Hälfte des Spielfeldes ist die aktuelle Aufstellung deiner Mannschaft zu sehen. Darunter sind in einer Tabelle alle deine Spieler aufgelistet.

<h4>Position eines Spielers ändern</h4>
<p>Im folgenden Video ist zu sehen, wie die Position eines Spielers auf dem Spielfeld geändert werden kann (in diesem Beispiel Angelo Schmidt). Durch klicken auf einen Spieler im Spielfeld (oder in der Mannschaftstabelle) wird der Spielermodus aktiviert. Durch Klicks auf die Pfeiltasten kann die Position des Spielers geändert werden. Ein Klick ins leere Spielfeld beendet den Spielermodus.</p>
<video width="500" height="406" controls="controls">
  <source src="~/App_Data/team_change_position.mp4" type="video/mp4">
  <source src="~/App_Data/team_change_position.ogg" type="video/ogg">
  Your browser does not support the video tag.
</video>

<h4>Spieler austauschen</h4>
Im folgenden Video wird gezeigt, wie ein Spieler durch einen anderen ersetzt wird (in diesem Beispiel Stanley Sommer durch Toni Kraus).
<video width="500" height="764" controls="controls">
  <source src="~/App_Data/team_substitute.mp4" type="video/mp4">
  <source src="~/App_Data/team_substitute.ogg" type="video/ogg">
  Your browser does not support the video tag.
</video>
tbd

<h3 id="h3Tactic">Taktik</h3>
tbd
<h3 id="h3Training">Mannschaftstraining</h3>
<p>Durch das Mannschaftstraining kann die körperliche Verfassung der Spieler (<a href="#uPlayerCondi">Kondition</a> und <a href="#uPlayerFresh">Frische</a>) gesteuert werden. Zudem werden die Eigenschaften der Spieler je nach Art des Trainings trainiert. Wird eine Trainingsart über einen längeren Zeitraum nicht durchgeführt, sinkt die Fähigkeit der Spieler in diesem Bereich.</p>
Die folgende Tabelle gibt qualitativ an, wie die Fitness und die Moral der Spieler durch die unterschiedlichen Mannschaftstrainings beeinflusst werden.
<table style="width: auto" border="1" cellpadding="3">
  <tr>
    <th style="text-align:center">Art</th>
    <th style="text-align:center">Kondition</th>
    <th style="text-align:center">Frische</th>
    <th style="text-align:center">Moral</th>
  </tr>
  @{
    for (int iT = 0; iT < MvcApplication.ckcore.sTraining.Length; iT++) {
      float[] fTr = MvcApplication.ckcore.plr.fTrainingFactors(iT);
      string[] sTr = new string[3];
      int[] iMulti = new int[3];
      if (fTr[0] > 0) { // Type: Kondition
        iMulti[0] = (int)Math.Round(Math.Abs(1f - fTr[0]) * 30);
        iMulti[1] = (int)Math.Round(Math.Abs(fTr[1]) * 2);
        iMulti[2] = (int)Math.Round(Math.Abs(fTr[2]) * 6);
      } else {
        iMulti[0] = (int)Math.Round(Math.Abs(fTr[0]) * 2);
        iMulti[1] = (int)Math.Round(Math.Abs(fTr[1]) / 3f);
        iMulti[2] = (int)Math.Round(Math.Abs(fTr[2]) * 5);
      }

      string[] sStyle = new string[3] { "color: green", "color: green", "color: green" };
      for (byte j = 0; j < sTr.Length; j++) {
        char cPM = '+';
        if (fTr[j] < 0f) {
          cPM = '-';
          sStyle[j] = "font-weight:bold; color: red";
        }

        sTr[j] = new string(cPM, iMulti[j]);

        if (string.IsNullOrEmpty(sTr[j])) {
          sTr[j] = "o";
          sStyle[j] = "color: black";
        }
      }

      <tr style="border: 1px solid black">
        <td align="center">@MvcApplication.ckcore.sTraining[iT]</td>
        <td align="center" style="@sStyle[0]">@sTr[0]</td>
        <td align="center" style="@sStyle[1]">@sTr[1]</td>
        <td align="center" style="@sStyle[2]">@sTr[2]</td>
      </tr>
    }
  }
</table>

Der Konditionsgewinn hängt vom Alter des Spielers ab. Junge Spieler bauen leichter Kondition auf, ältere schwerer.

<h3>Kapitäne</h3>
Nach Ernennung eines Spielers zum Kapitän gewinnt er 15% Moral (Vize-Kapitän: 5%). Wird durch die Ernennung ein anderer Spieler als Kapitän abgelöst, verliert dieser 20% Moral (Vize-Kapitän: 8%).
Zu Beginn eines jeden Spiels erhält der Kaptiän zusätzlich einen Moralbonus von 2%. Bei einem Gegentor wird der Einfluß der Führungspersönlichkeit des Kapitäns (FP) um 10% erhöht.

<h2>Spieler</h2>
<h3>Konstitution</h3>
<ul>
  <li>
    <u id="uPlayerCondi">Kondition</u><br />
    Je besser die Kondition des Spielers, desto geringer fällt der Frischeverlust in Spiel und Training aus.<br />
    Der Konditionsbereich liegt zwischen 10 < Kondition < 100 (durch Spielerdoping kann die maximale Kondition erhöht werden).
  </li>
  <li>
    <u id="uPlayerFresh">Frische</u><br />
    Je größer die Frische des Spielers, desto mehr Strecke kann er zurücklegen.<br />
    Der Frischebereich liegt zwischen 10 < Frische < 100.
  </li>
</ul>

<h3>Soft-skills</h3>
<ul>
  <li>
    <u>Moral</u><br />
    Die Moral wirkt sich auf die Fähigkeiten des Spielers aus.<br />
    Der Moralbereich liegt zwischen 10 < Moral < inf. Ist ein Spieler hoch motiviert (Moral > 100) ist es schwerer die Motivation zu steigern als wenn er schwach motiviert ist. Mit der Zeit nähert sich die Motivation dem Normwert von 100 an.
  </li>
  <li>
    <u>Erfahrung</u><br />
    Je höher die Erfahrung des Spielers, desto größer ist die Wahrscheinlichkeit, dass er sich in seinen Fähigkeiten verbessert.<br />
    Die Erfahrung steigt mit jeder gespielten Spielminute und sinkt im Lauf der Zeit kontinuierlich ab. Junge Spieler gewinnen schneller/verlieren langsamer Erfahrung als ältere.<br />
    Der Erfahrungbereich liegt zwischen 10 < Erfahrung < 100.
  </li>
  <li>
    <u>Talent</u><br />
    Das Talent ist für jeden Spieler konstant. Je größer das Talent des Spielers, desto größer ist die Wahrscheinlichkeit, dass er sich in seinen Fähigkeiten verbessert.<br />
    Das Talent liegt üblicherweise zwischen 1 und 10. In Ausnahmefällen ist jedoch auch ein Talent größer 10 möglich.
  </li>
  <li>
    <u>Tagesform</u><br />
    Die Tagesform wirkt sich auf die Fähigkeiten des Spielers aus und ändert sich jeden Tag.<br />
  </li>
</ul>

<h3>Fähigkeiten</h3>
Die Fähigkeiten des Spielers werden beeinflußt durch seine Frische, seine Moral, seine Tagesform und seine Position (wenn nicht auf Hauptposition eingesetzt).
<ul>
  @{
    foreach (string sSkill in MvcApplication.ckcore.plr.sSkills) {
      <li>@sSkill</li>
    }
  }
</ul>

<h3>Character</h3>
<ul>
  <li>
    <u>Führungspersönlichkeit (FP)</u><br />
    Je höher der mittlere Wert der Führungspersönlichkeit einer Mannschaft ist, desto geringer wirken sich Gegentore negativ auf die Moral der Mannschaft aus.
  </li>
</ul>

<h2>Verein</h2>
<h3 id="h3Stuff">Personal</h3>
<ul>
  <li>
    <u>Co-Trainer</u><br />
    Je besser der Co-Trainer, desto wahrscheinlicher entwickeln sich die Fähigkeiten der Spieler.
  </li>
  <li>
    <u>Konditionstrainer</u><br />
    Je besser der Konditionstrainer, desto effektiver ist das Konditionstraining.
  </li>
  <li>
    <u>Masseur</u><br />
    Je besser der Masseur, desto schneller regenerieren die Spieler.
  </li>
  <li>
    <u>Mentaltrainer</u><br />
    Je besser der Mentaltrainer, desto geringer wirken sich Niederlagen auf die Moral aus.
  </li>
  <li>
    <u>Teamarzt</u><br />
    Je besser der Teamarzt, desto kürzer sind die Verletzungszeiten der Spieler.
  </li>
  <li>
    <u>Jugendtrainer</u><br />
    Je besser der Jugendtrainer, desto wahrscheinlicher entwickeln sich die Fähigkeiten der Jugendspieler.
  </li>
  <li>
    <u>Jugendscout</u><br />
    Je besser der Jugendscout, desto wahrscheinlicher schließt sich ein neuer Jugendspieler dem Verein an.
  </li>
</ul>

<h3>Stadion</h3>
<h4>Ausbaukosten</h4>
Die Kosten für den Ausbau der Stadionplätze ist abhängig von der Anzahl der neu zu bauenden Plätze und der bereits vorhandenen Plätze.<br />
Je mehr Plätze gebaut werden und je mehr Plätze bereits vorhanden sind, desto teurer sind die Kosten pro Platz.

<div id="chartContainerStadiumCost" style="position: relative; height: 300px; width: 100%"></div>

<div style="position: relative">
  <h4>Oberring</h4>
  Wird ein Oberring gebaut, stehen 14 neue Stadionblöcke zur Verfügung.<br />
  Die Baukosten der Blöcke des Oberrings erhöhen sich um 50%. Untere Blöcke können nur noch bis zur Kapazität (abhängig vom Blocktyp) des größen Blocks des Unterings ausgebaut werden.
</div>

<h4>Stadionausstattung</h4>
@{
  string sSnackbar = (400f / CornerkickManager.Stadium.iFeatureSpecReqSnackbar).ToString("0.0");
  string sToilets = (400f / CornerkickManager.Stadium.iFeatureSpecReqToilets).ToString("0.0");
  string sCounter = (400f / CornerkickManager.Stadium.iFeatureSpecReqTicketcounter).ToString("0.0");
  string sCarpark = (400f / CornerkickManager.Stadium.iFeatureSpecReqCarpark).ToString("0.0");
}
Folgende Stadionausstattungen stehen zur Verfügung, welche die (potentiellen) Zuschauerzahlen um bis zu 25% reduzieren, wenn sie nicht genügend vorhanden sind. Die Zahlen in Klammern geben an, welche Anzahl der jeweiligen Ausstattungen für 10.000 Stehplatz-, 8.000 Sitzplatz- und 400 VIP Zuschauer (mindestens) vorhanden sein muss, um eine Zuschauerreduktion zu vermeiden.
<ul>
  <li>Imbissbuden (@sSnackbar)</li>
  <li>Toiletten (@sToilets)</li>
  <li>Ticketschalter (@sCounter)</li>
  <li>Parkplätze (@sCarpark)</li>
</ul>
Mit anderen Worten: @sCarpark Parkplätze genügen für 10.000 Stehplatz-, 8.000 Sitzplatz- und 400 VIP Zuschauer. Sind keine vorhanden reduziert sich die Anzahl der potentiellen Zuschauer um 25%.
